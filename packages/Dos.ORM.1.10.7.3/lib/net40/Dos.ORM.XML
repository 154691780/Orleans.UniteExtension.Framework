<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dos.ORM</name>
    </assembly>
    <members>
        <member name="T:Dos.ORM.BatchCommander">
            <summary>
            BatchCommander is used to execute batch queries.
            </summary>
        </member>
        <member name="M:Dos.ORM.BatchCommander.ExecuteBatch">
            <summary>
            执行
            </summary>
        </member>
        <member name="M:Dos.ORM.BatchCommander.#ctor(Dos.ORM.Database,System.Int32,System.Data.IsolationLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:Dos.ORM.BatchCommander"/> class.
            </summary>
            <param name="db">The db.</param>
            <param name="batchSize">Size of the batch.</param>
            <param name="il">The il.</param>
        </member>
        <member name="M:Dos.ORM.BatchCommander.#ctor(Dos.ORM.Database,System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            Initializes a new instance of the <see cref="T:Dos.ORM.BatchCommander"/> class.
            </summary>
            <param name="db">The db.</param>
            <param name="batchSize">Size of the batch.</param>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:Dos.ORM.BatchCommander.#ctor(Dos.ORM.Database,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Dos.ORM.BatchCommander"/> class.
            </summary>
            <param name="db">The db.</param>
            <param name="batchSize">Size of the batch.</param>
        </member>
        <member name="M:Dos.ORM.BatchCommander.Process(System.Data.Common.DbCommand)">
            <summary>
            Processes the specified CMD.
            </summary>
            <param name="cmd">The CMD.</param>
        </member>
        <member name="M:Dos.ORM.BatchCommander.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="T:Dos.ORM.CacheConfiguration">
            <summary>
            缓存设置
            </summary>
        </member>
        <member name="F:Dos.ORM.CacheConfiguration.enableCache">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:Dos.ORM.CacheConfiguration.Enable">
            <summary>
            是否开启缓存
            </summary>
        </member>
        <member name="P:Dos.ORM.CacheConfiguration.Entities">
            <summary>
            设置表缓存
            </summary>
        </member>
        <member name="F:Dos.ORM.CacheInfo.timeout">
            <summary>
            过期时间 单位：秒
            </summary>
        </member>
        <member name="P:Dos.ORM.CacheInfo.TimeOut">
            <summary>
            过期时间 单位：秒
            </summary>
        </member>
        <member name="F:Dos.ORM.CacheInfo.filePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:Dos.ORM.CacheInfo.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="M:Dos.ORM.CacheInfo.IsNullOrEmpty">
            <summary>
            判断该cache是否为空
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.CommandCreator">
            <summary>
            Command Creator
            </summary>
        </member>
        <member name="F:Dos.ORM.CommandCreator.db">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.CommandCreator.#ctor(Dos.ORM.Database)">
            <summary>
            
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:Dos.ORM.CommandCreator.CreateUpdateCommand``1(``0,Dos.ORM.WhereClip)">
            <summary>
            创建更新DbCommand
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.CommandCreator.CreateUpdateCommand``1(Dos.ORM.Field[],System.Object[],Dos.ORM.WhereClip)">
            <summary>
            创建更新DbCommand
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.CommandCreator.CreateDeleteCommand(System.String,System.String,Dos.ORM.WhereClip)">
            <summary>
            创建删除DbCommand
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.CommandCreator.CreateDeleteCommand``1(Dos.ORM.WhereClip)">
            <summary>
            创建删除DbCommand
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.CommandCreator.CreateInsertCommand``1(Dos.ORM.Field[],System.Object[])">
            <summary>
            创建添加DbCommand
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.CommandCreator.CreateInsertCommand``1(``0)">
            <summary>
            创建添加DbCommand
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.Common.DosORMCommon">
            <summary>
            此类占位用，以兼容以前代码"using Dos.ORM.Common;"不会报错。
            </summary>
        </member>
        <member name="T:Dos.ORM.DataUtils">
            <summary>
            帮助类
            </summary>
        </member>
        <member name="M:Dos.ORM.DataUtils.FormatSQL(System.String,System.Char,System.Char)">
            <summary>
            格式化sql
            </summary>
            <param name="sql"></param>
            <param name="leftToken"></param>
            <param name="rightToken"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.FormatValue(System.Object)">
            <summary>
            格式化数据为数据库通用格式
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.CheckStruct(System.Type)">
            <summary>
            CheckStuct
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.Clone(System.Object)">
            <summary>
            DeepClone
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.ConvertValue(System.Type,System.Object)">
            <summary>
            转换
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.ConvertValue``1(System.Object)">
            <summary>
            转换数据类型
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.FastMethodInvoke(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>
            快速执行Method
            </summary>
            <param name="obj"></param>
            <param name="method"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.Create``1">
            <summary>
            快速实例化一个T
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.Create(System.Type)">
            <summary>
            快速实例化一个FastCreateInstanceHandler
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.SetPropertyValue(System.Object,System.Reflection.PropertyInfo,System.Object)">
            <summary>
            设置属性值
            </summary>
            <param name="obj"></param>
            <param name="property"></param>
            <param name="value"></param>
        </member>
        <member name="M:Dos.ORM.DataUtils.SetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            设置属性值
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Dos.ORM.DataUtils.SetPropertyValue(System.Type,System.Object,System.String,System.Object)">
            <summary>
            设置属性值
            </summary>
            <param name="type"></param>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Dos.ORM.DataUtils.GetPropertyValue``1(``0,System.String)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.EntityArrayToDataTable``1(``0[])">
            <summary>
            从Entity数组转换成DataTable
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.DataRowToEntity``1(System.Data.DataRow)">
            <summary>
            DataRow转化为T
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.DataTableToEntityArray``1(System.Data.DataTable)">
            <summary>
            DataTable转化为TEntity[]
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.DataTableToEntityList``1(System.Data.DataTable)">
            <summary>
            DataTable转化为 List
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.GetNewParamCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.MakeUniqueKey(Dos.ORM.Field)">
            <summary>
            生成唯一字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.GetPrimaryKeyWhere(Dos.ORM.Entity)">
            <summary>
            生成主键条件
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.GetPrimaryKeyWhere``1(System.Array)">
            <summary>
            生成主键条件
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.FieldValueToDictionary(Dos.ORM.Field[],System.Object[])">
            <summary>
            数组转成字典
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.ToString(Dos.ORM.QueryOperator)">
            <summary>
            
            </summary>
            <param name="op"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DataUtils.ReadNullableChar(System.Object)">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="M:Dos.ORM.DataUtils.ThrowDataException(System.Exception,System.Int32,System.Data.IDataReader)">
            <summary>
            Throws a data exception, only used internally
            </summary>
            <param name="ex"></param>
            <param name="index"></param>
            <param name="reader"></param>
        </member>
        <member name="M:Dos.ORM.DosORMCommonExpand.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            获取自定义特性，带有缓存功能，避免因.Net内部GetCustomAttributes没有缓存而带来的损耗
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="member"></param>
            <param name="inherit"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DosORMCommonExpand.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>获取自定义属性</summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="member"></param>
            <param name="inherit"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.Cache">
            <summary>
            简单缓存处理类
            </summary>
        </member>
        <member name="F:Dos.ORM.Cache.Default">
            <summary>
            默认cache实例
            </summary>
        </member>
        <member name="F:Dos.ORM.Cache.hxjCache">
            <summary>
            cache
            </summary>
        </member>
        <member name="F:Dos.ORM.Cache._timeOut">
            <summary>
            timeout 600秒
            </summary>
        </member>
        <member name="M:Dos.ORM.Cache.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.Cache.#ctor(System.Int32)">
            <summary>
            设置过期时间
            </summary>
            <param name="timeOut"></param>
        </member>
        <member name="P:Dos.ORM.Cache.TimeOut">
            <summary>
            time out (seconds)   
            
            <![CDATA[if timeout <=0,the cache expiration time is maxvalue]]>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.Cache.AddCache(System.String,System.Object)">
            <summary>
            添加缓存 (绝对有效期)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
        </member>
        <member name="M:Dos.ORM.Cache.AddCache(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存 (绝对有效期)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="timeout">绝对有效期（单位: 秒）</param>
        </member>
        <member name="M:Dos.ORM.Cache.AddCacheSlidingExpiration(System.String,System.Object)">
            <summary>
            添加缓存 (相对有效期)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
        </member>
        <member name="M:Dos.ORM.Cache.AddCacheSlidingExpiration(System.String,System.Object,System.Int32)">
            <summary>
            添加缓存 (相对有效期)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="timeout">相对过期时间 (单位: 秒)</param>
        </member>
        <member name="M:Dos.ORM.Cache.AddCacheFilesDependency(System.String,System.Object,System.String[])">
            <summary>
            添加缓存 (文件依赖)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="filenames">缓存依赖的文件或目录</param>
        </member>
        <member name="M:Dos.ORM.Cache.AddCacheDependency(System.String,System.Object,System.Int32,System.Web.Caching.CacheDependency)">
            <summary>
            添加缓存 (文件依赖)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="timeout">绝对过期时间 （单位：秒）</param>
            <param name="dep">缓存依赖</param>
        </member>
        <member name="M:Dos.ORM.Cache.AddCacheKeysDependency(System.String,System.Object,System.String[])">
            <summary>
            添加缓存 (一组键值依赖)
            </summary>
            <param name="cacheKey">缓存键值</param>
            <param name="cacheValue">缓存内容</param>
            <param name="cachekeys">一组缓存键，此改变缓存也失效</param>
        </member>
        <member name="M:Dos.ORM.Cache.onRemove(System.String,System.Object,System.Web.Caching.CacheItemRemovedReason)">
            <summary>
            缓存删除的委托实例
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <param name="reason"></param>
        </member>
        <member name="M:Dos.ORM.Cache.RemoveCache(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="cacheKey">缓存键值</param>
        </member>
        <member name="M:Dos.ORM.Cache.GetCache(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="cacheKey">对象的关键字</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Cache.GetCount">
            <summary>
            获取缓存数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Cache.GetCacheKeys">
            <summary>
            返回缓存键值列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Cache.ClearAll">
            <summary>
            清空所有缓存
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Require(System.Boolean,System.String)">
            <summary>
            Precondition check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Require(System.Boolean,System.String,System.Exception)">
            <summary>
            Precondition check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Require(System.Boolean)">
            <summary>
            Precondition check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Require(System.Object,System.String,Dos.ORM.Check.ICheckStrategy[])">
            <summary>
            Precondition check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Ensure(System.Boolean,System.String)">
            <summary>
            Postcondition check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Ensure(System.Boolean,System.String,System.Exception)">
            <summary>
            Postcondition check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Ensure(System.Boolean)">
            <summary>
            Postcondition check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Ensure(System.Object,System.String,Dos.ORM.Check.ICheckStrategy[])">
            <summary>
            Postcondition check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Invariant(System.Boolean,System.String)">
            <summary>
            Invariant check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Invariant(System.Boolean,System.String,System.Exception)">
            <summary>
            Invariant check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Invariant(System.Boolean)">
            <summary>
            Invariant check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Invariant(System.Object,System.String,Dos.ORM.Check.ICheckStrategy[])">
            <summary>
            Invariant check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Assert(System.Boolean,System.String)">
            <summary>
            Assertion check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Assert(System.Boolean,System.String,System.Exception)">
            <summary>
            Assertion check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Assert(System.Boolean)">
            <summary>
            Assertion check.
            </summary>
        </member>
        <member name="M:Dos.ORM.Check.Assert(System.Object,System.String,Dos.ORM.Check.ICheckStrategy[])">
            <summary>
            Assertion check.
            </summary>
        </member>
        <member name="P:Dos.ORM.Check.UseExceptions">
            <summary>
            Is exception handling being used?
            </summary>
        </member>
        <member name="T:Dos.ORM.DesignByContractException">
            <summary>
            Exception raised when a contract is broken.
            Catch this exception type if you wish to differentiate between 
            any DesignByContract exception and other runtime exceptions.
             
            </summary>
        </member>
        <member name="M:Dos.ORM.DesignByContractException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dos.ORM.DesignByContractException"/> class.
            </summary>
        </member>
        <member name="M:Dos.ORM.DesignByContractException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dos.ORM.DesignByContractException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Dos.ORM.DesignByContractException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Dos.ORM.DesignByContractException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Dos.ORM.PreconditionException">
            <summary>
            Exception raised when a precondition fails.
            </summary>
        </member>
        <member name="M:Dos.ORM.PreconditionException.#ctor">
            <summary>
            Precondition Exception.
            </summary>
        </member>
        <member name="M:Dos.ORM.PreconditionException.#ctor(System.String)">
            <summary>
            Precondition Exception.
            </summary>
        </member>
        <member name="M:Dos.ORM.PreconditionException.#ctor(System.String,System.Exception)">
            <summary>
            Precondition Exception.
            </summary>
        </member>
        <member name="T:Dos.ORM.PostconditionException">
            <summary>
            Exception raised when a postcondition fails.
            </summary>
        </member>
        <member name="M:Dos.ORM.PostconditionException.#ctor">
            <summary>
            Postcondition Exception.
            </summary>
        </member>
        <member name="M:Dos.ORM.PostconditionException.#ctor(System.String)">
            <summary>
            Postcondition Exception.
            </summary>
        </member>
        <member name="M:Dos.ORM.PostconditionException.#ctor(System.String,System.Exception)">
            <summary>
            Postcondition Exception.
            </summary>
        </member>
        <member name="T:Dos.ORM.InvariantException">
            <summary>
            Exception raised when an invariant fails.
            </summary>
        </member>
        <member name="M:Dos.ORM.InvariantException.#ctor">
            <summary>
            Invariant Exception.
            </summary>
        </member>
        <member name="M:Dos.ORM.InvariantException.#ctor(System.String)">
            <summary>
            Invariant Exception.
            </summary>
        </member>
        <member name="M:Dos.ORM.InvariantException.#ctor(System.String,System.Exception)">
            <summary>
            Invariant Exception.
            </summary>
        </member>
        <member name="T:Dos.ORM.AssertionException">
            <summary>
            Exception raised when an assertion fails.
            </summary>
        </member>
        <member name="M:Dos.ORM.AssertionException.#ctor">
            <summary>
            Assertion Exception.
            </summary>
        </member>
        <member name="M:Dos.ORM.AssertionException.#ctor(System.String)">
            <summary>
            Assertion Exception.
            </summary>
        </member>
        <member name="M:Dos.ORM.AssertionException.#ctor(System.String,System.Exception)">
            <summary>
            Assertion Exception.
            </summary>
        </member>
        <member name="T:Dos.ORM.FastInvokeHandler">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.FastCreateInstanceHandler">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.FastPropertyGetHandler">
            <summary>
            
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.FastPropertySetHandler">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="parameter"></param>
        </member>
        <member name="T:Dos.ORM.DynamicCalls">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.DynamicCalls.dictInvoker">
            <summary>
            用于存放GetMethodInvoker的Dictionary
            </summary>
        </member>
        <member name="F:Dos.ORM.DynamicCalls.dictCreator">
            <summary>
            用于存放GetInstanceCreator的Dictionary
            </summary>
        </member>
        <member name="M:Dos.ORM.DynamicCalls.GetInstanceCreator(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="F:Dos.ORM.DynamicCalls.dictGetter">
            <summary>
            用于存放GetPropertyGetter的Dictionary
            </summary>
        </member>
        <member name="F:Dos.ORM.DynamicCalls.dictSetter">
            <summary>
            用于存放SetPropertySetter的Dictionary
            </summary>
        </member>
        <member name="M:Dos.ORM.DynamicCalls.EmitCastToReference(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            
            </summary>
            <param name="ilGenerator"></param>
            <param name="type"></param>
        </member>
        <member name="M:Dos.ORM.DynamicCalls.EmitBoxIfNeeded(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            
            </summary>
            <param name="ilGenerator"></param>
            <param name="type"></param>
        </member>
        <member name="M:Dos.ORM.DynamicCalls.EmitFastInt(System.Reflection.Emit.ILGenerator,System.Int32)">
            <summary>
            
            </summary>
            <param name="ilGenerator"></param>
            <param name="value"></param>
        </member>
        <member name="T:Dos.ORM.EntityCache">
            <summary>
            实体信息缓存
            </summary>
        </member>
        <member name="F:Dos.ORM.EntityCache._entityList">
            <summary>
            保存实体列表
            </summary>
        </member>
        <member name="F:Dos.ORM.EntityCache.LockObj">
            <summary>
            lock object
            </summary>
        </member>
        <member name="M:Dos.ORM.EntityCache.Reset">
            <summary>
            清空所有缓存
            </summary>
        </member>
        <member name="M:Dos.ORM.EntityCache.Reset``1">
            <summary>
            清理具体实体的缓存
            </summary>
        </member>
        <member name="M:Dos.ORM.EntityCache.GetTableName``1">
            <summary>
            返回表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityCache.GetUserName``1">
            <summary>
            返回用户名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityCache.getTEntity``1">
            <summary>
            返回T
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityCache.GetPrimaryKeyFields``1">
            <summary>
            获取主键字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityCache.GetFields``1">
            <summary>
            返回所有字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityCache.GetFirstField``1">
            <summary>
            返回第一个字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityCache.GetIdentityField``1">
            <summary>
            返回标识字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityCache.IsReadOnly``1">
            <summary>
            是否只读
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityCache.GetSequence``1">
            <summary>
            标识列的名称（Oracle）
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.EntityUtils">
            <summary>
            实体帮助类
            </summary>
        </member>
        <member name="M:Dos.ORM.EntityUtils.UpdateModel``1(``0)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Model</typeparam>
            <param name="t">model</param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.UpdateModel``1(``0,System.String)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Model</typeparam>
            <param name="t">model</param>
            <param name="prefix">前缀</param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.UpdateModel``1(``0,System.Collections.Specialized.NameValueCollection)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Model</typeparam>
            <param name="t">model</param>
            <param name="form">Request</param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.UpdateModel``1(``0,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>
            <param name="form">Request</param>
            <param name="prefix">前缀</param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.TryUpdateModel``1(``0)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>      
            <returns>转换是否成功</returns>
        </member>
        <member name="M:Dos.ORM.EntityUtils.TryUpdateModel``1(``0,System.String)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>    
            <param name="prefix">前缀</param>
            <returns>转换是否成功</returns>
        </member>
        <member name="M:Dos.ORM.EntityUtils.TryUpdateModel``1(``0,System.Collections.Specialized.NameValueCollection)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>
            <param name="form">Request</param>
            <returns>转换是否成功</returns>
        </member>
        <member name="M:Dos.ORM.EntityUtils.TryUpdateModel``1(``0,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            为Entity赋值
            </summary>
            <typeparam name="T">Entity</typeparam>
            <param name="t">Entity</param>
            <param name="form">Request</param>
            <param name="prefix">前缀</param>
            <returns>转换是否成功</returns>
        </member>
        <member name="M:Dos.ORM.EntityUtils.SetDocumentValue``1(``0)">
            <summary>
            设置Web页面的值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.SetDocumentValue(System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object})">
            <summary>
            设置Web页面的值
            </summary>
            <param name="fieldvalues"></param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.SetDocumentValue(System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object},System.String)">
            <summary>
            设置Web页面的值
            </summary>
            <param name="fieldvalues"></param>
            <param name="prefix"></param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.SetDocumentValueString(System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object},System.String)">
            <summary>
            返回赋值的脚本
            </summary>
            <param name="fieldvalues"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityUtils.SetDocumentValueString``1(``0,System.String)">
            <summary>
            返回赋值的脚本
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prefix"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.SetDocumentValueString(Dos.ORM.Field[],System.Object[],System.String)">
            <summary>
            返回赋值的脚本
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityUtils.SetDocumentValue``1(``0,System.String)">
            <summary>
            设置Web页面的值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prefix"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.SetDocumentValue(Dos.ORM.Field[],System.Object[])">
            <summary>
            设置Web页面值
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.SetDocumentValue(Dos.ORM.Field[],System.Object[],System.String)">
            <summary>
            设置Web页面值
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="prefix"></param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.SetDocumentValueClear``1(System.String)">
            <summary>
            清空Web页面的值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prefix"></param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.SetDocumentValueClearString``1(System.String)">
            <summary>
            返回清空Web页面的值的脚本
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="prefix"></param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.GetField``1(System.String)">
            <summary>
            根据字段名返回实体字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldName"></param>
            <returns>返回null 就表示字段不存在</returns>
        </member>
        <member name="M:Dos.ORM.EntityUtils.SetValue``1(``0,``0)">
            <summary>
            实体赋值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="toEntity">被赋值实体</param>
            <param name="fromEntity">来源实体</param>
            <returns>返回null 就表示fromEntity==null</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dos.ORM.EntityUtils.GetDeserializer(System.Type,System.Data.IDataReader,System.Int32,System.Int32,System.Boolean)" -->
        <member name="M:Dos.ORM.EntityUtils.GetStructDeserializer(System.Type,System.Int32)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityUtils.GetSettableProps(System.Type)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityUtils.GetSettableFields(System.Type)">
            <summary>
            
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.EntityUtils.EmitInt32(System.Reflection.Emit.ILGenerator,System.Int32)">
            <summary>
            
            </summary>
            <param name="il"></param>
            <param name="value"></param>
        </member>
        <member name="M:Dos.ORM.EntityUtils.GetTypeDeserializer(System.Type,System.Data.IDataReader,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="reader"></param>
            <param name="startBound"></param>
            <param name="length"></param>
            <param name="returnNullIfFirstMissing"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.EntityUtils.FastExpando">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.EntityUtils.ReaderToEnumerable``1(System.Data.IDataReader)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.JoinType">
            <summary>
            连接类型
            </summary>
        </member>
        <member name="F:Dos.ORM.JoinType.InnerJoin">
            <summary>
            InnerJoin
            </summary>
        </member>
        <member name="F:Dos.ORM.JoinType.LeftJoin">
            <summary>
            LeftJoin
            </summary>
        </member>
        <member name="F:Dos.ORM.JoinType.RightJoin">
            <summary>
            RightJoin
            </summary>
        </member>
        <member name="F:Dos.ORM.JoinType.CrossJoin">
            <summary>
            CrossJoin
            </summary>
        </member>
        <member name="F:Dos.ORM.JoinType.FullJoin">
            <summary>
            FullJoin
            </summary>
        </member>
        <member name="T:Dos.ORM.EntityState">
            <summary>
            标记实体状态
            </summary>
        </member>
        <member name="F:Dos.ORM.EntityState.Unchanged">
            <summary>
            标记为不做任何数据库操作。
            </summary>
        </member>
        <member name="F:Dos.ORM.EntityState.Added">
            <summary>
            标记为插入状态。.Save()触发。
            </summary>
        </member>
        <member name="F:Dos.ORM.EntityState.Deleted">
            <summary>
            标记为删除状态。.Save()触发。
            </summary>
        </member>
        <member name="F:Dos.ORM.EntityState.Modified">
            <summary>
            标记为修改状态。.Save()触发。
            </summary>
        </member>
        <member name="T:Dos.ORM.LogHandler">
            <summary>
            A delegate used for log.
            </summary>
            <param name="logMsg">The msg to write to log.</param>
        </member>
        <member name="T:Dos.ORM.ILogable">
            <summary>
            Mark a implementing class as loggable.
            </summary>
        </member>
        <member name="E:Dos.ORM.ILogable.OnLog">
            <summary>
            OnLog event.
            </summary>
        </member>
        <member name="T:Dos.ORM.Database">
            <summary>
            Database
            </summary>
        </member>
        <member name="F:Dos.ORM.Database.Default">
            <summary>
            Default Database
            </summary>
        </member>
        <member name="M:Dos.ORM.Database.#ctor(Dos.ORM.DbProvider)">
            <summary>
            构造函数
            </summary>
            <param name="dbProvider"></param>
        </member>
        <member name="P:Dos.ORM.Database.ConnectionString">
            <summary>
            Gets the connect string.
            </summary>
            <value>The connect string.</value>
        </member>
        <member name="P:Dos.ORM.Database.DbProviderFactory">
            <summary>
            Gets the DbProviderFactory
            </summary>
        </member>
        <member name="P:Dos.ORM.Database.DbProvider">
            <summary>
            Gets the db provider.
            </summary>
            <value>The db provider.</value>
        </member>
        <member name="E:Dos.ORM.Database.OnLog">
            <summary>
            OnLog event.
            </summary>
        </member>
        <member name="M:Dos.ORM.Database.WriteLog(System.Data.Common.DbCommand)">
            <summary>
            Writes the log.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Dos.ORM.Database.WriteLog(System.String)">
            <summary>
            Writes the log.
            </summary>
            <param name="logMsg">The log MSG.</param>
        </member>
        <member name="M:Dos.ORM.Database.CloseConnection(System.Data.Common.DbCommand)">
            <summary>
            Closes the connection.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Dos.ORM.Database.CloseConnection(System.Data.Common.DbConnection)">
            <summary>
            Closes the connection.
            </summary>
            <param name="conn">The conn.</param>
        </member>
        <member name="M:Dos.ORM.Database.CloseConnection(System.Data.Common.DbTransaction)">
            <summary>
            Closes the connection.
            </summary>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:Dos.ORM.Database.GetConnection">
            <summary>
            Gets the connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Database.GetConnection(System.Boolean)">
            <summary>
            Gets the connection.
            </summary>
            <param name="tryOpen">if set to <c>true</c> [try open].</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Database.CreateConnection">
            <summary>
            <para>When overridden in a derived class, gets the connection for this database.</para>
            <seealso cref="T:System.Data.Common.DbConnection"/>        
            </summary>
            <returns>
            <para>The <see cref="T:System.Data.Common.DbConnection"/> for this database.</para>
            </returns>
        </member>
        <member name="M:Dos.ORM.Database.CreateConnection(System.Boolean)">
            <summary>
            <para>When overridden in a derived class, gets the connection for this database.</para>
            <seealso cref="T:System.Data.Common.DbConnection"/>        
            </summary>
            <returns>
            <para>The <see cref="T:System.Data.Common.DbConnection"/> for this database.</para>
            </returns>
        </member>
        <member name="M:Dos.ORM.Database.GetStoredProcCommand(System.String)">
            <summary>
            <para>When overridden in a derived class, creates a <see cref="T:System.Data.Common.DbCommand"/> for a stored procedure.</para>
            </summary>
            <param name="storedProcedureName"><para>The name of the stored procedure.</para></param>
            <returns><para>The <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure.</para></returns>       
        </member>
        <member name="M:Dos.ORM.Database.GetSqlStringCommand(System.String)">
            <summary>
            <para>When overridden in a derived class, creates an <see cref="T:System.Data.Common.DbCommand"/> for a SQL query.</para>
            </summary>
            <param name="query"><para>The text of the query.</para></param>        
            <returns><para>The <see cref="T:System.Data.Common.DbCommand"/> for the SQL query.</para></returns>        
        </member>
        <member name="M:Dos.ORM.Database.GetDataAdapter">
            <summary>
            Gets a DbDataAdapter with Standard update behavior.
            </summary>
            <returns>A <see cref="T:System.Data.Common.DbDataAdapter"/>.</returns>
            <seealso cref="T:System.Data.Common.DbDataAdapter"/>
        </member>
        <member name="M:Dos.ORM.Database.LoadDataSet(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            <para>Loads a <see cref="T:System.Data.DataSet"/> from command text in a transaction.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command in.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to fill.</para>
            </param>
            <param name="tableNames">
            <para>An array of table name mappings for the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
        </member>
        <member name="M:Dos.ORM.Database.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" /> and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>An <see cref="T:System.Data.IDataReader"/> object.</para>
            </returns>        
        </member>
        <member name="M:Dos.ORM.Database.ExecuteReader(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" /> within the given 
            <paramref name="transaction" /> and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>An <see cref="T:System.Data.IDataReader"/> object.</para>
            </returns>        
        </member>
        <member name="M:Dos.ORM.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String)">
            <summary>
            <para>Executes the <paramref name="command"/> and adds a new <see cref="T:System.Data.DataTable"></see> to the existing <see cref="T:System.Data.DataSet"></see>.</para>
            </summary>
            <param name="command">
            <para>The <see cref="T:System.Data.Common.DbCommand"/> to execute.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to load.</para>
            </param>
            <param name="tableName">
            <para>The name for the new <see cref="T:System.Data.DataTable"/> to add to the <see cref="T:System.Data.DataSet"/>.</para>
            </param>        
            <exception cref="T:System.ArgumentNullException">Any input parameter was <see langword="null"/> (<b>Nothing</b> in Visual Basic)</exception>
            <exception cref="T:System.ArgumentException">tableName was an empty string</exception>
        </member>
        <member name="M:Dos.ORM.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> within the given <paramref name="transaction" /> and adds a new <see cref="T:System.Data.DataTable"></see> to the existing <see cref="T:System.Data.DataSet"></see>.</para>
            </summary>
            <param name="command">
            <para>The <see cref="T:System.Data.Common.DbCommand"/> to execute.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to load.</para>
            </param>
            <param name="tableName">
            <para>The name for the new <see cref="T:System.Data.DataTable"/> to add to the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>        
            <exception cref="T:System.ArgumentNullException">Any input parameter was <see langword="null"/> (<b>Nothing</b> in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException">tableName was an empty string.</exception>
        </member>
        <member name="M:Dos.ORM.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[])">
            <summary>
            <para>Loads a <see cref="T:System.Data.DataSet"/> from a <see cref="T:System.Data.Common.DbCommand"/>.</para>
            </summary>
            <param name="command">
            <para>The command to execute to fill the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to fill.</para>
            </param>
            <param name="tableNames">
            <para>An array of table name mappings for the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
        </member>
        <member name="M:Dos.ORM.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[],System.Data.Common.DbTransaction)">
            <summary>
            <para>Loads a <see cref="T:System.Data.DataSet"/> from a <see cref="T:System.Data.Common.DbCommand"/> in  a transaction.</para>
            </summary>
            <param name="command">
            <para>The command to execute to fill the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to fill.</para>
            </param>
            <param name="tableNames">
            <para>An array of table name mappings for the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command in.</para>
            </param>
        </member>
        <member name="M:Dos.ORM.Database.LoadDataSet(System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            <para>Loads a <see cref="T:System.Data.DataSet"/> from command text.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <param name="dataSet">
            <para>The <see cref="T:System.Data.DataSet"/> to fill.</para>
            </param>
            <param name="tableNames">
            <para>An array of table name mappings for the <see cref="T:System.Data.DataSet"/>.</para>
            </param>
        </member>
        <member name="M:Dos.ORM.Database.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            <para>Executes the <paramref name="command"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="command"><para>The <see cref="T:System.Data.Common.DbCommand"/> to execute.</para></param>
            <returns>A <see cref="T:System.Data.DataSet"/> with the results of the <paramref name="command"/>.</returns>        
        </member>
        <member name="M:Dos.ORM.Database.ExecuteDataSet(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> as part of the <paramref name="transaction" /> and returns the results in a new <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="command"><para>The <see cref="T:System.Data.Common.DbCommand"/> to execute.</para></param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <returns>A <see cref="T:System.Data.DataSet"/> with the results of the <paramref name="command"/>.</returns>        
        </member>
        <member name="M:Dos.ORM.Database.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" /> and returns the results in a new <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>A <see cref="T:System.Data.DataSet"/> with the results of the <paramref name="commandText"/>.</para>
            </returns>
        </member>
        <member name="M:Dos.ORM.Database.ExecuteDataSet(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> as part of the given <paramref name="transaction" /> and returns the results in a new <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>A <see cref="T:System.Data.DataSet"/> with the results of the <paramref name="commandText"/>.</para>
            </returns>
        </member>
        <member name="M:Dos.ORM.Database.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            <para>Executes the <paramref name="command"/> and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <returns>
            <para>The first column of the first row in the result set.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Dos.ORM.Database.ExecuteScalar(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> within a <paramref name="transaction" />, and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <returns>
            <para>The first column of the first row in the result set.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Dos.ORM.Database.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" />  and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>The first column of the first row in the result set.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Dos.ORM.Database.ExecuteScalar(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" /> 
            within the given <paramref name="transaction" /> and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>The first column of the first row in the result set.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Dos.ORM.Database.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            <para>Executes the <paramref name="command"/> and returns the number of rows affected.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>       
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Dos.ORM.Database.ExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> within the given <paramref name="transaction" />, and returns the number of rows affected.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Dos.ORM.Database.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" /> and returns the number of rows affected.</para>
            </summary>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>The number of rows affected.</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Dos.ORM.Database.ExecuteNonQuery(System.Data.Common.DbTransaction,System.Data.CommandType,System.String)">
            <summary>
            <para>Executes the <paramref name="commandText"/> interpreted as specified by the <paramref name="commandType" /> as part of the given <paramref name="transaction" /> and returns the number of rows affected.</para>
            </summary>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <param name="commandType">
            <para>One of the <see cref="T:System.Data.CommandType"/> values.</para>
            </param>
            <param name="commandText">
            <para>The command text to execute.</para>
            </param>
            <returns>
            <para>The number of rows affected</para>
            </returns>
            <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Dos.ORM.Database.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            <para>Executes the <paramref name="command"/> and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <returns>
            <para>An <see cref="T:System.Data.IDataReader"/> object.</para>
            </returns>        
        </member>
        <member name="M:Dos.ORM.Database.ExecuteReader(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            <para>Executes the <paramref name="command"/> within a transaction and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.</para>
            </summary>
            <param name="command">
            <para>The command that contains the query to execute.</para>
            </param>
            <param name="transaction">
            <para>The <see cref="T:System.Data.IDbTransaction"/> to execute the command within.</para>
            </param>
            <returns>
            <para>An <see cref="T:System.Data.IDataReader"/> object.</para>
            </returns>        
        </member>
        <member name="M:Dos.ORM.Database.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Database.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="il">The il.</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Database.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The command to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>
            <param name="size"><para>The maximum size of the data within the column.</para></param>
            <param name="direction"><para>One of the <see cref="T:System.Data.ParameterDirection"/> values.</para></param>
            <param name="nullable"><para>Avalue indicating whether the parameter accepts <see langword="null"/> (<b>Nothing</b> in Visual Basic) values.</para></param>
            <param name="precision"><para>The maximum number of digits used to represent the <paramref name="value"/>.</para></param>
            <param name="scale"><para>The number of decimal places to which <paramref name="value"/> is resolved.</para></param>
            <param name="sourceColumn"><para>The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>One of the <see cref="T:System.Data.DataRowVersion"/> values.</para></param>
            <param name="value"><para>The value of the parameter.</para></param>       
        </member>
        <member name="M:Dos.ORM.Database.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            <para>Adds a new instance of a <see cref="T:System.Data.Common.DbParameter"/> object to the command.</para>
            </summary>
            <param name="command">The command to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>        
            <param name="direction"><para>One of the <see cref="T:System.Data.ParameterDirection"/> values.</para></param>                
            <param name="sourceColumn"><para>The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>One of the <see cref="T:System.Data.DataRowVersion"/> values.</para></param>
            <param name="value"><para>The value of the parameter.</para></param>    
        </member>
        <member name="M:Dos.ORM.Database.AddOutParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32)">
            <summary>
            Adds a new Out <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The command to add the out parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>        
            <param name="size"><para>The maximum size of the data within the column.</para></param>        
        </member>
        <member name="M:Dos.ORM.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The command to add the in parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>                
            <remarks>
            <para>This version of the method is used when you can have the same parameter object multiple times with different values.</para>
            </remarks>        
        </member>
        <member name="M:Dos.ORM.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Object)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The commmand to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>                
            <param name="value"><para>The value of the parameter.</para></param>      
        </member>
        <member name="M:Dos.ORM.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The commmand to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>       
            <param name="size">size</param>
            <param name="value"><para>The value of the parameter.</para></param>      
        </member>
        <member name="M:Dos.ORM.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Object)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The commmand to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="value"><para>The value of the parameter.</para></param>      
        </member>
        <member name="M:Dos.ORM.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.String,System.Data.DataRowVersion)">
            <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter"/> object to the given <paramref name="command"/>.
            </summary>
            <param name="command">The command to add the parameter.</param>
            <param name="name"><para>The name of the parameter.</para></param>
            <param name="dbType"><para>One of the <see cref="T:System.Data.DbType"/> values.</para></param>                
            <param name="sourceColumn"><para>The name of the source column mapped to the DataSet and used for loading or returning the value.</para></param>
            <param name="sourceVersion"><para>One of the <see cref="T:System.Data.DataRowVersion"/> values.</para></param>
        </member>
        <member name="M:Dos.ORM.Database.AddInputOutputParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            Adds a new In and Out
            </summary>
        </member>
        <member name="M:Dos.ORM.Database.AddReturnValueParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32)">
            <summary>
            Adds a new return
            </summary>
        </member>
        <member name="M:Dos.ORM.Database.AddParameter(System.Data.Common.DbCommand,System.Data.Common.DbParameter[])">
            <summary>
            Adds parameters
            </summary>
        </member>
        <member name="M:Dos.ORM.Database.AddCommandParameter(System.Data.Common.DbCommand,Dos.ORM.Parameter[])">
            <summary>
            给命令添加参数  where paramters
            </summary>
            <param name="command"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="P:Dos.ORM.Database.IsBatchConnection">
            <summary>
            Gets a value indicating whether this instance is batch connection.
            </summary>
            <value>
            	<c>true</c> if this instance is batch connection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Dos.ORM.Database.BeginBatchConnection">
            <summary>
            Begins the batch connection.   the default size of the batch is 10.
            </summary>
        </member>
        <member name="M:Dos.ORM.Database.BeginBatchConnection(System.Int32)">
            <summary>
            Begins the batch connection.
            </summary>
            <param name="batchSize">Size of the batch.</param>
        </member>
        <member name="M:Dos.ORM.Database.BeginBatchConnection(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            Begins the batch connection.
            </summary>
            <param name="batchSize">Size of the batch.</param>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:Dos.ORM.Database.BeginBatchConnection(System.Int32,System.Data.IsolationLevel)">
            <summary>
            Begins the batch connection.
            </summary>
            <param name="batchSize">Size of the batch.</param>
            <param name="il">The il.</param>
        </member>
        <member name="M:Dos.ORM.Database.EndBatchConnection">
            <summary>
            Ends the batch connection.
            </summary>
        </member>
        <member name="M:Dos.ORM.Database.ExecutePendingBatchOperations">
            <summary>
            Executes the pending batch operations.
            </summary>
        </member>
        <member name="T:Dos.ORM.DbBatch">
            <summary>
            批处理
            </summary>
        </member>
        <member name="F:Dos.ORM.DbBatch.cmdCreator">
            <summary>
            DbCommand生成器
            </summary>
        </member>
        <member name="F:Dos.ORM.DbBatch.batchcmd">
            <summary>
            批处理
            </summary>
        </member>
        <member name="F:Dos.ORM.DbBatch.isClose">
            <summary>
            是否已关闭
            </summary>
        </member>
        <member name="M:Dos.ORM.DbBatch.#ctor(Dos.ORM.CommandCreator,Dos.ORM.BatchCommander)">
            <summary>
            构造函数
            </summary>
            <param name="batchcmd"></param>
            <param name="cmdCreator"></param>
        </member>
        <member name="M:Dos.ORM.DbBatch.Execute">
            <summary>
            立即执行已挂起的批处理
            </summary>
        </member>
        <member name="M:Dos.ORM.DbBatch.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:Dos.ORM.DbBatch.Dispose">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:Dos.ORM.DbBatch.UpdateAll``1(``0[])">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbBatch.UpdateAll``1(``0)">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Dos.ORM.DbBatch.UpdateAll``1(``0,Dos.ORM.WhereClip)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Update``1(``0[])">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbBatch.Update``1(``0)">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Dos.ORM.DbBatch.Update``1(``0,Dos.ORM.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Update``1(Dos.ORM.Field,System.Object,Dos.ORM.WhereClip)">
            <summary>
            更新单个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Update``1(System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object},Dos.ORM.WhereClip)">
            <summary>
            更新多个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Update``1(Dos.ORM.Field[],System.Object[],Dos.ORM.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Delete``1(``0)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Delete``1(System.String[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Delete``1(System.Int32[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Delete``1(System.Int64[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Delete``1(System.Guid[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Delete``1(Dos.ORM.WhereClip)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Insert``1(``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Insert``1(``0)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbBatch.Insert``1(Dos.ORM.Field[],System.Object[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.DatabaseType">
            <summary>
            Type of a database.
            </summary>
        </member>
        <member name="F:Dos.ORM.DatabaseType.SqlServer">
            <summary>
            SQL Server 2000
            </summary>
        </member>
        <member name="F:Dos.ORM.DatabaseType.MsAccess">
            <summary>
            MsAccess
            </summary>
        </member>
        <member name="F:Dos.ORM.DatabaseType.SqlServer9">
            <summary>
            SQL Server 2005
            </summary>
        </member>
        <member name="F:Dos.ORM.DatabaseType.Oracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="F:Dos.ORM.DatabaseType.Sqlite3">
            <summary>
            Sqlite
            </summary>
        </member>
        <member name="F:Dos.ORM.DatabaseType.MySql">
            <summary>
            MySql
            </summary>
        </member>
        <member name="T:Dos.ORM.DbSession">
            <summary>
            DbSession
            </summary>
        </member>
        <member name="F:Dos.ORM.DbSession.db">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.DbSession.cmdCreator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.TurnOnCache">
            <summary>
            开启缓存
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.TurnOffCache">
            <summary>
            关闭缓存
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.BeginBatchConnection">
            <summary>
            开始批处理，默认10条sql组合
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.BeginBatchConnection(System.Int32)">
            <summary>
            开始批处理
            </summary>
            <param name="batchSize">sql组合条数</param>
        </member>
        <member name="M:Dos.ORM.DbSession.BeginBatchConnection(System.Int32,System.Data.Common.DbTransaction)">
            <summary>
            开始批处理
            </summary>
            <param name="batchSize">sql组合条数</param>
            <param name="tran">事务</param>
        </member>
        <member name="M:Dos.ORM.DbSession.BeginBatchConnection(System.Int32,System.Data.IsolationLevel)">
            <summary>
            开始批处理
            </summary>
            <param name="batchSize">sql组合条数</param>
            <param name="il">事务</param>
        </member>
        <member name="F:Dos.ORM.DbSession.Default">
            <summary>
            Get the default gateway, which mapping to the default Database.
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.SetDefault(Dos.ORM.DatabaseType,System.String)">
            <summary>
            Sets the default DbSession.
            </summary>
            <param name="dt">The dt.</param>
            <param name="connStr">The conn STR.</param>
        </member>
        <member name="M:Dos.ORM.DbSession.CreateDbProvider(Dos.ORM.DatabaseType,System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="dt">The dt.</param>
            <param name="connStr">The conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="M:Dos.ORM.DbSession.SetDefault(System.String,System.String,System.String)">
            <summary>
            Sets the default DbSession.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="className">Name of the class.</param>
            <param name="connStr">The conn STR.</param>
        </member>
        <member name="M:Dos.ORM.DbSession.SetDefault(System.String)">
            <summary>
            Sets the default DbSession.
            </summary>
            <param name="connStrName">Name of the conn STR.</param>
        </member>
        <member name="M:Dos.ORM.DbSession.#ctor">
            <summary>
            构造函数    使用默认  DbSession.Default
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="connStrName">config文件中connectionStrings节点的name</param>
        </member>
        <member name="M:Dos.ORM.DbSession.#ctor(Dos.ORM.Database)">
            <summary>
            构造函数
            </summary>
            <param name="db">已知的Database</param>
        </member>
        <member name="M:Dos.ORM.DbSession.#ctor(Dos.ORM.DatabaseType,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dt">数据库类别</param>
            <param name="connStr">连接字符串</param>
        </member>
        <member name="M:Dos.ORM.DbSession.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="assemblyName">程序集</param>
            <param name="className">类名</param>
            <param name="connStr">连接字符串</param>
        </member>
        <member name="M:Dos.ORM.DbSession.From``1(System.String)">
            <summary>
            查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.From(System.String)">
            <summary>
            查询
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Sum``1(Dos.ORM.Field,Dos.ORM.WhereClip)">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Sum``1(Dos.ORM.Field,Dos.ORM.Where)">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Sum``1(Dos.ORM.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Max``1(Dos.ORM.Field,Dos.ORM.WhereClip)">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Max``1(Dos.ORM.Field,Dos.ORM.Where)">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Max``1(Dos.ORM.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Min``1(Dos.ORM.Field,Dos.ORM.WhereClip)">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Min``1(Dos.ORM.Field,Dos.ORM.Where)">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Min``1(Dos.ORM.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Avg``1(Dos.ORM.Field,Dos.ORM.WhereClip)">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Avg``1(Dos.ORM.Field,Dos.ORM.Where)">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Avg``1(Dos.ORM.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Sum``2(Dos.ORM.Field,Dos.ORM.WhereClip)">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Sum``2(Dos.ORM.Field,Dos.ORM.Where)">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Sum``2(Dos.ORM.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Sum
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Max``2(Dos.ORM.Field,Dos.ORM.WhereClip)">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Max``2(Dos.ORM.Field,Dos.ORM.Where)">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Max``2(Dos.ORM.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Max
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Min``2(Dos.ORM.Field,Dos.ORM.WhereClip)">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Min``2(Dos.ORM.Field,Dos.ORM.Where)">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Min``2(Dos.ORM.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Min
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Avg``2(Dos.ORM.Field,Dos.ORM.WhereClip)">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Avg``2(Dos.ORM.Field,Dos.ORM.Where)">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Avg``2(Dos.ORM.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Avg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Exists``1(Dos.ORM.WhereClip)">
            <summary>
            判断是否存在记录
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Exists``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            判断是否存在记录
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Exists``1(Dos.ORM.Where)">
            <summary>
            判断是否存在记录
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Count``1(Dos.ORM.Field,Dos.ORM.WhereClip)">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Count``1(Dos.ORM.Field,Dos.ORM.Where)">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Count``1(Dos.ORM.Field,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Count``1(Dos.ORM.WhereClip)">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Count``1(Dos.ORM.Where)">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Count
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.RegisterSqlLogger(Dos.ORM.LogHandler)">
            <summary>
            Registers the SQL logger.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Dos.ORM.DbSession.UnregisterSqlLogger(Dos.ORM.LogHandler)">
            <summary>
            Unregisters the SQL logger.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="P:Dos.ORM.DbSession.Db">
            <summary>
            Gets the db.
            </summary>
            <value>The db.</value>
        </member>
        <member name="M:Dos.ORM.DbSession.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
            <returns>The begined transaction.</returns>
        </member>
        <member name="M:Dos.ORM.DbSession.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="il">The il.</param>
            <returns>The begined transaction.</returns>
        </member>
        <member name="M:Dos.ORM.DbSession.CloseTransaction(System.Data.Common.DbTransaction)">
            <summary>
            Closes the transaction.
            </summary>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:Dos.ORM.DbSession.BuildDbParamName(System.String)">
            <summary>
            Builds the name of the db param.
            </summary>
            <param name="name">The name.</param>
            <returns>The name of the db param</returns>
        </member>
        <member name="M:Dos.ORM.DbSession.UpdateAll``1(``0)">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.UpdateAll``1(``0[])">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.UpdateAll``1(System.Data.Common.DbTransaction,``0[])">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.UpdateAll``1(``0,Dos.ORM.WhereClip)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.UpdateAll``1(System.Data.Common.DbTransaction,``0)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.UpdateAll``1(System.Data.Common.DbTransaction,``0,Dos.ORM.WhereClip)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="where"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.UpdateAll``1(System.Data.Common.DbTransaction,``0,Dos.ORM.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(``0)">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(``0[])">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Collections.Generic.List{``0})">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(``0,Dos.ORM.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(``0,Dos.ORM.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,``0)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,``0[])">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,System.Collections.Generic.List{``0})">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,``0,Dos.ORM.WhereClip)">
            <summary>
            更新
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,``0,Dos.ORM.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(Dos.ORM.Field,System.Object,Dos.ORM.WhereClip)">
            <summary>
            更新单个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(Dos.ORM.Field,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(Dos.ORM.Field,System.Object,Dos.ORM.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,Dos.ORM.Field,System.Object,Dos.ORM.WhereClip)">
            <summary>
            更新单个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,Dos.ORM.Field,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,Dos.ORM.Field,System.Object,Dos.ORM.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object},Dos.ORM.WhereClip)">
            <summary>
            更新多个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object},Dos.ORM.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object},Dos.ORM.WhereClip)">
            <summary>
            更新多个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object},Dos.ORM.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(Dos.ORM.Field[],System.Object[],Dos.ORM.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(Dos.ORM.Field[],System.Object[],System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(Dos.ORM.Field[],System.Object[],Dos.ORM.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,Dos.ORM.Field[],System.Object[],Dos.ORM.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,Dos.ORM.Field[],System.Object[],System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Update``1(System.Data.Common.DbTransaction,Dos.ORM.Field[],System.Object[],Dos.ORM.Where)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(``0)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Data.Common.DbTransaction,``0)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Data.Common.DbTransaction,``0[])">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Data.Common.DbTransaction,System.Collections.Generic.List{``0})">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Data.Common.DbTransaction,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tran"></param>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Int32[])">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Guid[])">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Int64[])">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.String[])">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.DeleteByPrimaryKey``1(System.Array)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Data.Common.DbTransaction,System.Int32[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Data.Common.DbTransaction,System.Int64[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Data.Common.DbTransaction,System.Guid[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Data.Common.DbTransaction,System.String[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.DeleteByPrimaryKey``1(System.Data.Common.DbTransaction,System.Array[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Data.Common.DbTransaction,Dos.ORM.WhereClip)">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Data.Common.DbTransaction,Dos.ORM.Where)">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(System.Data.Common.DbTransaction,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(Dos.ORM.WhereClip)">
            <summary>
             删除
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Delete``1(Dos.ORM.Where)">
            <summary>
            删除
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.DeleteAll``1">
            <summary>
            删除整表数据
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Insert``1(``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Insert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Insert``1(System.Collections.Generic.List{``0})">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Insert``1(``0)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Insert``1(System.Data.Common.DbTransaction,``0)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Insert``1(System.Data.Common.DbTransaction,``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Insert``1(System.Data.Common.DbTransaction,System.Collections.Generic.List{``0})">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Insert``1(System.Data.Common.DbTransaction,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Insert``1(Dos.ORM.Field[],System.Object[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Insert``1(System.Data.Common.DbTransaction,Dos.ORM.Field[],System.Object[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.insertExecute``1(System.Data.Common.DbCommand)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.insertExecute``1(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.Save``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将实体批量提交至数据库，内置事务。每个实体需要手动标记EntityState状态。
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Save``1(``0)">
             <summary>
            保存实体。需要手动标记EntityState状态。
             </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Save``1(System.Data.Common.DbTransaction,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将实体批量提交至数据库。每个实体需要手动标记EntityState状态。
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.Save``1(System.Data.Common.DbTransaction,``0)">
             <summary>
            保存实体。需要手动标记EntityState状态。
             </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.ExecuteNonQuery(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.ExecuteScalar(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            执行ExecuteScalar
            </summary>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            执行ExecuteScalar
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            执行ExecuteReader
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.ExecuteReader(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            执行ExecuteReader
            </summary>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            执行ExecuteDataSet
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.ExecuteDataSet(System.Data.Common.DbCommand,System.Data.Common.DbTransaction)">
            <summary>
            执行ExecuteDataSet
            </summary>
            <param name="cmd"></param>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="P:Dos.ORM.DbSession.LeftToken">
            <summary>
            左边  
            <example>例如:sqlserver   的    [</example>
            </summary>
        </member>
        <member name="P:Dos.ORM.DbSession.RightToken">
            <summary>
            右边
            <example>例如:sqlserver   的    ]</example>
            </summary>
        </member>
        <member name="P:Dos.ORM.DbSession.ParamPrefix">
            <summary>
            参数前缀
            <example>例如:sqlserver 的     @</example>
            </summary>
        </member>
        <member name="M:Dos.ORM.DbSession.FromProc(System.String)">
            <summary>
            存储过程查询
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbSession.FromSql(System.String)">
            <summary>
            sql查询
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.DbTrans">
            <summary>
            事务
            </summary>
        </member>
        <member name="F:Dos.ORM.DbTrans.trans">
            <summary>
            事务
            </summary>
        </member>
        <member name="F:Dos.ORM.DbTrans.conn">
            <summary>
            连接
            </summary>
        </member>
        <member name="F:Dos.ORM.DbTrans.dbSession">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.DbTrans.isCommitOrRollback">
            <summary>
            判断是否有提交或回滚
            </summary>
        </member>
        <member name="F:Dos.ORM.DbTrans.isClose">
            <summary>
            是否关闭
            </summary>
        </member>
        <member name="M:Dos.ORM.DbTrans.#ctor(System.Data.Common.DbTransaction,Dos.ORM.DbSession)">
            <summary>
            构造函数
            </summary>
            <param name="trans"></param>
            <param name="dbSession"></param>
        </member>
        <member name="P:Dos.ORM.DbTrans.Connection">
            <summary>
            连接
            </summary>
        </member>
        <member name="P:Dos.ORM.DbTrans.IsolationLevel">
            <summary>
            事务级别
            </summary>
        </member>
        <member name="M:Dos.ORM.DbTrans.Commit">
            <summary>
            提交
            </summary>
        </member>
        <member name="M:Dos.ORM.DbTrans.Rollback">
            <summary>
            回滚
            </summary>
        </member>
        <member name="M:Dos.ORM.DbTrans.op_Implicit(Dos.ORM.DbTrans)~System.Data.Common.DbTransaction">
            <summary>
            隐式转换
            </summary>
            <param name="dbTrans"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:Dos.ORM.DbTrans.Dispose">
            <summary>
            关闭连接并释放资源
            </summary>
        </member>
        <member name="M:Dos.ORM.DbTrans.FromSql(System.String)">
            <summary>
            FromSql
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.FromPro(System.String)">
            <summary>
            FromPro
            </summary>
            <param name="proName"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.From``1">
            <summary>
            查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.From``1(System.String)">
            <summary>
            查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.From(System.String)">
            <summary>
            查询
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.UpdateAll``1(``0[])">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbTrans.UpdateAll``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbTrans.UpdateAll``1(``0)">
            <summary>
            更新全部字段  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Dos.ORM.DbTrans.UpdateAll``1(``0,Dos.ORM.WhereClip)">
            <summary>
            更新全部字段
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.UpdateAll``1(``0,Dos.ORM.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(``0[])">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(``0)">
            <summary>
            更新  
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(``0,Dos.ORM.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(``0,Dos.ORM.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(Dos.ORM.Field,System.Object,Dos.ORM.WhereClip)">
            <summary>
            更新单个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(Dos.ORM.Field,System.Object,Dos.ORM.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(Dos.ORM.Field,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object},Dos.ORM.WhereClip)">
            <summary>
            更新多个值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object},Dos.ORM.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(System.Collections.Generic.Dictionary{Dos.ORM.Field,System.Object},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fieldValue"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(Dos.ORM.Field[],System.Object[],Dos.ORM.WhereClip)">
            <summary>
            更新
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(Dos.ORM.Field[],System.Object[],Dos.ORM.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Update``1(Dos.ORM.Field[],System.Object[],System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Delete``1(``0)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Delete``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbTrans.Delete``1(System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbTrans.Delete``1(System.String[])">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Delete``1(Dos.ORM.WhereClip)">
            <summary>
             删除
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Delete``1(Dos.ORM.Where)">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Delete``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Insert``1(``0[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Insert``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbTrans.Insert``1(System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entities"></param>
        </member>
        <member name="M:Dos.ORM.DbTrans.Insert``1(``0)">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbTrans.Insert``1(Dos.ORM.Field[],System.Object[])">
            <summary>
            添加
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.ModifyField">
            <summary>
            实体属性修改记录 （字段修改记录）
            </summary>
        </member>
        <member name="P:Dos.ORM.ModifyField.Field">
            <summary>
            字段
            </summary>
        </member>
        <member name="P:Dos.ORM.ModifyField.OldValue">
            <summary>
            原始值
            </summary>
        </member>
        <member name="P:Dos.ORM.ModifyField.NewValue">
            <summary>
            新值
            </summary>
        </member>
        <member name="M:Dos.ORM.ModifyField.#ctor(Dos.ORM.Field,System.Object,System.Object)">
            <summary>
            构造函数
            </summary>
            <param name="field">字段</param>
            <param name="oldValue">旧值</param>
            <param name="newValue">新值</param>
        </member>
        <member name="T:Dos.ORM.Table">
            <summary>
            标记实体类表名
            </summary>
        </member>
        <member name="F:Dos.ORM.Table._tableName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.Table.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:Dos.ORM.Table.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="tableName"></param>
            <param name="username"></param>
        </member>
        <member name="M:Dos.ORM.Table.GetTableName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Table.GetUserName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.Entity">
            <summary>
            实体信息
            </summary>
        </member>
        <member name="F:Dos.ORM.Entity._tableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:Dos.ORM.Entity._userName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.Entity._tableAsName">
            <summary>
            别名
            </summary>
        </member>
        <member name="F:Dos.ORM.Entity._isAttached">
            <summary>
            是否
            </summary>
        </member>
        <member name="F:Dos.ORM.Entity._entityState">
            <summary>
            实体状态
            </summary>
        </member>
        <member name="F:Dos.ORM.Entity.All">
            <summary>
            select *。用于Lambda写法实现 select * 。注：表中不得含有字段名为All。
            </summary>
        </member>
        <member name="F:Dos.ORM.Entity._modifyFields">
            <summary>
            修改的字段集合
            </summary>
        </member>
        <member name="F:Dos.ORM.Entity._modifyFieldsStr">
            <summary>
            修改的字段集合 v1.10.5.6及以上版本可使用。
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.V1_10_5_6_Plus">
            <summary>
            是否是v1.10.5.6及以上版本实体。
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="tableName">表名</param>
        </member>
        <member name="M:Dos.ORM.Entity.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="tableName">表名</param>
            <param name="userName"></param>
        </member>
        <member name="M:Dos.ORM.Entity.Attach">
            <summary>
            将实体置为修改状态
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.AttachAll">
            <summary>
            将实体所有字段置为修改状态
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.AttachAll(System.Boolean)">
            <summary>
            将实体所有字段置为修改状态
            </summary>
            <param name="ignoreNullOrEmpty">忽略null值字段与空字符串字段</param>
        </member>
        <member name="M:Dos.ORM.Entity.Attach(Dos.ORM.EntityState)">
            <summary>
            将实体置为指定状态（仅对.Save()有效果）
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.GetEntityState">
            <summary>
            获取实体状态
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.DeAttach">
            <summary>
            1、恢复实体为默认状态。
            2、标记实体为不做任何数据库操作（仅对.Save()有效果）
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.OnPropertyValueChange(System.String)">
            <summary>
            
            </summary>
            <param name="f"></param>
        </member>
        <member name="M:Dos.ORM.Entity.OnPropertyValueChange(Dos.ORM.Field,System.Object,System.Object)">
            <summary>
            记录字段修改
            </summary>
            <param name="field"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Dos.ORM.Entity.ClearModifyFields">
            <summary>
            清除修改记录
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.SetPropertyValues(System.Data.IDataReader)">
            <summary>
            Sets the property values.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Dos.ORM.Entity.SetPropertyValues(System.Data.DataRow)">
            <summary>
            Sets the property values.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Dos.ORM.Entity.GetFields">
            <summary>
            GetFields
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Entity.GetValues">
            <summary>
            GetValues
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Entity.GetPrimaryKeyFields">
            <summary>
            GetPrimaryKeyFields
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Entity.GetIdentityField">
            <summary>
            标识列
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.GetSequence">
            <summary>
            标识列的名称（例如如Oracle中Sequence名称）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Entity.IsModify">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Entity.GetModifyFields">
            <summary>
            返回修改记录。v.10.5.5以上版本请不要使用此方法。
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.GetModifyFieldsStr">
            <summary>
            返回修改记录。v.10.5.5及以下版本请不要使用此方法。
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.IsReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.GetTableName">
            <summary>
            获取表名
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.GetUserName">
            <summary>
            获取表名
            </summary>
        </member>
        <member name="M:Dos.ORM.Entity.GetTableAsName">
            <summary>
            获取表名别名
            </summary>
        </member>
        <member name="F:Dos.ORM.WhereType.JoinWhere">
            <summary>
            join where
            </summary>
        </member>
        <member name="F:Dos.ORM.WhereType.Where">
            <summary>
            常规Where
            </summary>
        </member>
        <member name="T:Dos.ORM.QueryOperator">
            <summary>
            比较类型
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.Equal">
            <summary>
            ==
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.NotEqual">
            <summary>
            &lt;&gt; 、 !=、不等于
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.Greater">
            <summary>
            >
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.Less">
            <summary>
            &lt; 小于
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.GreaterOrEqual">
            <summary>
            >=
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.LessOrEqual">
            <summary>
            &lt;= 小于等于
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.Like">
            <summary>
            LIKE
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Dos.ORM.QueryOperator.BitwiseAND" -->
        <member name="F:Dos.ORM.QueryOperator.BitwiseOR">
            <summary>
            |
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.BitwiseXOR">
            <summary>
            ^
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.BitwiseNOT">
            <summary>
            ~
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.IsNULL">
            <summary>
            IS NULL
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.IsNotNULL">
            <summary>
            IS NOT NULL
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.Add">
            <summary>
             +
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.Subtract">
            <summary>
            -
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.Multiply">
            <summary>
            *
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.Divide">
            <summary>
            /
            </summary>
        </member>
        <member name="F:Dos.ORM.QueryOperator.Modulo">
            <summary>
            %
            </summary>
        </member>
        <member name="T:Dos.ORM.Parameter">
            <summary>
            参数
            </summary>
        </member>
        <member name="M:Dos.ORM.Parameter.#ctor(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="parameterName"></param>
            <param name="parameterValue"></param>
        </member>
        <member name="M:Dos.ORM.Parameter.#ctor(System.String,System.Object,System.Nullable{System.Data.DbType},System.Nullable{System.Int32})">
            <summary>
            
            </summary>
            <param name="parameterName"></param>
            <param name="parameterValue"></param>
            <param name="parameterDbType"></param>
            <param name="parameterSize"></param>
        </member>
        <member name="P:Dos.ORM.Parameter.ParameterName">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="P:Dos.ORM.Parameter.ParameterValue">
            <summary>
            参数值
            </summary>
        </member>
        <member name="P:Dos.ORM.Parameter.ParameterDbType">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Dos.ORM.Parameter.ParameterSize">
            <summary>
            长度
            </summary>
        </member>
        <member name="T:Dos.ORM.Expression">
            <summary>
            表达式
            </summary>
        </member>
        <member name="F:Dos.ORM.Expression.expressionString">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.Expression.parameters">
            <summary>
            参数
            </summary>
        </member>
        <member name="M:Dos.ORM.Expression.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Dos.ORM.Expression.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="expressionString"></param>
        </member>
        <member name="M:Dos.ORM.Expression.#ctor(System.String,Dos.ORM.Parameter[])">
            <summary>
            构造函数
            </summary>
            <param name="expressionString"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Dos.ORM.Expression.#ctor(Dos.ORM.Field,System.Object,Dos.ORM.QueryOperator)">
            <summary>
            构造函数
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <param name="oper"></param>
        </member>
        <member name="M:Dos.ORM.Expression.#ctor(Dos.ORM.Field,System.Object,Dos.ORM.QueryOperator,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <param name="oper"></param>
            <param name="isFieldBefore"></param>
        </member>
        <member name="P:Dos.ORM.Expression.Parameters">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="M:Dos.ORM.Expression.ToString">
            <summary>
            返回组合字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionComparer.CompareNull``1(``0,``0,System.Int32@)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x"></param>
            <param name="y"></param>
            <param name="result"></param>
            <returns>can stop comparing or not</returns>
        </member>
        <member name="T:Dos.ORM.ExpressionToClip`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToJoinWhere``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToWhereClip(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToWhereClip``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToWhereClip``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToWhereClip``3(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToWhereClip``4(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToWhereClip``5(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,``4,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToWhereClipChild(System.Linq.Expressions.Expression,Dos.ORM.WhereType)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="wt"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.IsBoolFieldOrProperty(System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ConvertUnary(System.Linq.Expressions.UnaryExpression,Dos.ORM.WhereType)">
            <summary>
            
            </summary>
            <param name="ue"></param>
            <param name="wtype"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ConvertBinary(System.Linq.Expressions.BinaryExpression,Dos.ORM.WhereType)">
            <summary>
            
            </summary>
            <param name="be"></param>
            <param name="wt"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ConvertMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            
            </summary>
            <param name="mce"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ConvertNull(System.Linq.Expressions.MethodCallExpression,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mce"></param>
            <param name="isNull"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ConvertEqualsCall(System.Linq.Expressions.MethodCallExpression,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mce"></param>
            <param name="isLike"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ConvertInCall(System.Linq.Expressions.MethodCallExpression,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mce"></param>
            <param name="notIn"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ConvertLikeCall(System.Linq.Expressions.MethodCallExpression,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="mce"></param>
            <param name="left"></param>
            <param name="right"></param>
            <param name="isLike"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.GetMemberName(System.Linq.Expressions.Expression,Dos.ORM.ColumnFunction@,System.Linq.Expressions.MemberExpression@)">
            <summary>
            
            </summary>
            <param name="expr"></param>
            <param name="function"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.LeftAndRight(System.Linq.Expressions.BinaryExpression,Dos.ORM.QueryOperator,Dos.ORM.WhereType)">
            <summary>
            
            </summary>
            <param name="be"></param>
            <param name="co"></param>
            <param name="wtype"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.GetValue(System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToGroupByClip(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToGroupByClipChild(System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="exprBody"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToOrderByClip(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToOrderByDescendingClip(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToOrderByClipChild(System.Linq.Expressions.Expression,Dos.ORM.OrderByOperater)">
            <summary>
            
            </summary>
            <param name="exprBody"></param>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToSelect(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToSelect``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToSelect``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToSelect``3(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToSelect``4(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToSelect``5(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,``4,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToSelect(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ToSelectChild(System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="exprBody"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ConvertFun(System.Linq.Expressions.MethodCallExpression,System.String)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.ConvertAs(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.GetTableName(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.GetFieldName(System.Reflection.MemberInfo)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.CreateField(System.Reflection.MemberInfo,System.Type)">
            <summary>
            
            </summary>
            <param name="mi"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.CreateField(System.String[],System.Type)">
            <summary>
            
            </summary>
            <param name="filedProp"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ExpressionToClip`1.CreateField(System.String[],System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="filedProp"></param>
            <param name="t"></param>
            <param name="asName"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.PartialEvaluatorBase.Nominator">
            <summary>
            Performs bottom-up analysis to determine which nodes can possibly
            be part of an evaluated sub-tree.
            </summary>
        </member>
        <member name="T:Dos.ORM.Where">
            <summary>
            
            </summary>
        </member>
        <member name="T:Dos.ORM.Where`1">
            <summary>
            Where条件拼接，同WhereClipBuilder
            </summary>
        </member>
        <member name="M:Dos.ORM.Where`1.And(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            AND
            </summary>
        </member>
        <member name="M:Dos.ORM.Where`1.And``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            AND
            </summary>
        </member>
        <member name="M:Dos.ORM.Where`1.Or(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Or
            </summary>
        </member>
        <member name="T:Dos.ORM.WhereClipBuilder`1">
            <summary>
            Where条件拼接，同Where类
            </summary>
        </member>
        <member name="M:Dos.ORM.WhereClipBuilder`1.And(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            AND
            </summary>
        </member>
        <member name="M:Dos.ORM.WhereClipBuilder`1.Or(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Or
            </summary>
        </member>
        <member name="T:Dos.ORM.WhereClipBuilder">
            <summary>
            WhereClipBuilder
            </summary>
        </member>
        <member name="F:Dos.ORM.WhereClipBuilder.expressionStringBuilder">
            <summary>
            条件字符串
            </summary>
        </member>
        <member name="F:Dos.ORM.WhereClipBuilder.parameters">
            <summary>
            条件参数
            </summary>
        </member>
        <member name="M:Dos.ORM.WhereClipBuilder.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Dos.ORM.WhereClipBuilder.#ctor(Dos.ORM.WhereClip)">
            <summary>
            构造函数
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:Dos.ORM.WhereClipBuilder.And(Dos.ORM.WhereClip)">
            <summary>
            AND
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:Dos.ORM.WhereClipBuilder.Or(Dos.ORM.WhereClip)">
            <summary>
            Or
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:Dos.ORM.WhereClipBuilder.ToWhereClip">
            <summary>
            转换成WhereClip
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.LambdaWhereClip`1">
            <summary>
            条件
            </summary>
        </member>
        <member name="F:Dos.ORM.LambdaWhereClip`1.All">
            <summary>
            All
            </summary>
        </member>
        <member name="M:Dos.ORM.LambdaWhereClip`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Dos.ORM.Field`1">
            <summary>
            字段信息   
            </summary>
            <typeparam name="T">实体</typeparam>
        </member>
        <member name="M:Dos.ORM.Field`1.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fileName">字段名</param>
        </member>
        <member name="T:Dos.ORM.Field">
            <summary>
            字段信息
            </summary>
        </member>
        <member name="M:Dos.ORM.Field.#ctor">
            <summary>
            空的构造函数
            </summary>
        </member>
        <member name="M:Dos.ORM.Field.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:Dos.ORM.Field.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:Dos.ORM.Field.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="tableName"></param>
            <param name="description"></param>
        </member>
        <member name="M:Dos.ORM.Field.#ctor(System.String,System.String,System.Nullable{System.Data.DbType},System.Nullable{System.Int32},System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="tableName"></param>
            <param name="parameterDbType"></param>
            <param name="parameterSize"></param>
            <param name="description"></param>
        </member>
        <member name="M:Dos.ORM.Field.#ctor(System.String,System.String,System.Nullable{System.Data.DbType},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="tableName"></param>
            <param name="parameterDbType"></param>
            <param name="parameterSize"></param>
            <param name="description"></param>
            <param name="aliasName"></param>
        </member>
        <member name="F:Dos.ORM.Field.fieldName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="F:Dos.ORM.Field.tableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="F:Dos.ORM.Field.aliasName">
            <summary>
            字段别名
            </summary>
        </member>
        <member name="F:Dos.ORM.Field.description">
            <summary>
            字段描述
            </summary>
        </member>
        <member name="F:Dos.ORM.Field.parameterDbType">
            <summary>
            字段数据库中类型
            </summary>
        </member>
        <member name="F:Dos.ORM.Field.parameterSize">
            <summary>
            字段数据库中长度
            </summary>
        </member>
        <member name="F:Dos.ORM.Field.All">
            <summary>
            所有字段   就是  *  
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.ParameterDbType">
            <summary>
            字段数据库中类型
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.ParameterSize">
            <summary>
            字段数据库中长度
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.FieldName">
            <summary>
            返回 字段名
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.TableName">
            <summary>
            返回  表名
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.Name">
            <summary>
            返回  别名，当别名为空返回字段名
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.PropertyName">
            <summary>
            返回属性名  即fileName
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.AliasName">
            <summary>
            返回  别名
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.Description">
            <summary>
            返回  字段描述
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.TableFieldName">
            <summary>
            返回  表名.字段名
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.FullName">
            <summary>
            返回  表名.字段名 AS 别名
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.Year">
            <summary>
            datepart   year
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.Month">
            <summary>
            datepart   month
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.Day">
            <summary>
            datepart  day
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.Desc">
            <summary>
            倒叙
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.Asc">
            <summary>
            正序
            </summary>
        </member>
        <member name="P:Dos.ORM.Field.GroupBy">
            <summary>
            分组
            </summary>
        </member>
        <member name="M:Dos.ORM.Field.Equals(Dos.ORM.Field)">
            <summary>
            比较
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.IsNullOrEmpty(Dos.ORM.Field)">
            <summary>
            判断是否为空
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SetTableName(System.String)">
            <summary>
            设置所属表名
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.As(System.String)">
            <summary>
            AS
            </summary>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.As(Dos.ORM.Field)">
            <summary>
            AS
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.IsNull(Dos.ORM.Field)">
            <summary>
            判断字段是否为Null
            </summary>
            <param name="field">字段实体</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.IsNull(System.Object)">
            <summary>
            判断字段是否为Null
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Count">
            <summary>
            Count
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Distinct">
            <summary>
            Distinct
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Sum">
            <summary>
            Sum
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Avg">
            <summary>
            Avg
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Len">
            <summary>
            len
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Trim">
            <summary>
            ltrim and  rtrim
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Max">
            <summary>
            Max
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Min">
            <summary>
            Min
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Left(System.Int32)">
            <summary>
            Left
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Right(System.Int32)">
            <summary>
            Right
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Substring(System.Int32,System.Int32)">
            <summary>
            substring
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.IndexOf(System.String)">
            <summary>
            charindex
            </summary>
            <param name="subString"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Replace(System.String,System.String)">
            <summary>
            replace
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.createWhereClip(Dos.ORM.Field,Dos.ORM.Field,Dos.ORM.QueryOperator)">
            <summary>
            创建whereclip
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <param name="oper"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.createField(Dos.ORM.Field,Dos.ORM.Field,Dos.ORM.QueryOperator)">
            <summary>
            创建Field
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <param name="oper"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dos.ORM.Field.BitwiseAND(Dos.ORM.Field)" -->
        <member name="M:Dos.ORM.Field.BitwiseOR(Dos.ORM.Field)">
            <summary>
            |
            </summary>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.BitwiseXOR(Dos.ORM.Field)">
            <summary>
            ^
            </summary>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.BitwiseNOT(Dos.ORM.Field)">
            <summary>
            ~
            </summary>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Contain(System.Object)">
            <summary>
            like '%value%' 模糊查询，同Like
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Like(System.Object)">
            <summary>
            like '%value%' 模糊查询，同  Contain
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.BeginWith(System.Object)">
            <summary>
            BeginWith  
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.EndWith(System.Object)">
            <summary>
            EndWith  
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Dos.ORM.Field.likeString">
            <summary>
            LIKE %
            </summary>
        </member>
        <member name="F:Dos.ORM.Field.selectInString">
            <summary>
            IN
            </summary>
        </member>
        <member name="F:Dos.ORM.Field.selectNotInString">
            <summary>
            NOT IN
            </summary>
        </member>
        <member name="M:Dos.ORM.Field.selectInOrNotIn``1(Dos.ORM.Field,System.String,``0[])">
            <summary>
            子查询
            </summary>
            <param name="field"></param>
            <param name="join"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.selectInOrNotIn``1(Dos.ORM.Field,System.String,System.Boolean,``0[])">
            <summary>
            子查询
            </summary>
            <param name="field"></param>
            <param name="join"></param>
            <param name="isParameter">是否参数化</param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SelectIn(System.Object[])">
            <summary>
            SelectIn  
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.In(System.Object[])">
            <summary>
            同SelectIn。
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SelectIn``1(``0[])">
            <summary>
            where field in (value,value,value)。传入Array或List&lt;T>。
            </summary>
            <param name="values"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.In``1(``0[])">
            <summary>
            where field in (value,value,value)。同SelectIn。传入Array或List&lt;T>。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SelectIn``1(System.Collections.Generic.List{``0})">
            <summary>
            where field in (value,value,value)。 传入Array或List&lt;T>。
            </summary>
            <param name="values"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.In``1(System.Collections.Generic.List{``0})">
            <summary>
            where field in (value,value,value)。同SelectIn。传入Array或List&lt;T>。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SelectNotIn(System.Object[])">
            <summary>
            where field in (value,value,value)。同In.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.NotIn(System.Object[])">
            <summary>
            同SelectNotIn。
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SelectNotIn``1(``0[])">
            <summary>
            SelectNotIn  。传入Array或List&lt;T>。
            </summary>
            <param name="values"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.NotIn``1(``0[])">
            <summary>
            同SelectNotIn。传入Array或List&lt;T>。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SelectNotIn``1(System.Collections.Generic.List{``0})">
            <summary>
            SelectNotIn。传入Array或List&lt;T>。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.NotIn``1(System.Collections.Generic.List{``0})">
            <summary>
            同SelectNotIn。传入Array或List&lt;T>。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SubQueryIn(Dos.ORM.FromSection)">
            <summary>
            SubQueryIn   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SubQueryNotIn(Dos.ORM.FromSection)">
            <summary>
            SubQueryNotIn   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.subQuery(Dos.ORM.Field,Dos.ORM.FromSection,Dos.ORM.QueryOperator)">
            <summary>
            组合 子查询
            </summary>
            <param name="field"></param>
            <param name="from"></param>
            <param name="oper"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.subQuery(Dos.ORM.Field,Dos.ORM.FromSection,System.String)">
            <summary>
            组合 子查询
            </summary>
            <param name="field"></param>
            <param name="from"></param>
            <param name="join"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SubQueryEqual(Dos.ORM.FromSection)">
            <summary>
            SubQueryEqual   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SubQueryNotEqual(Dos.ORM.FromSection)">
            <summary>
            SubQueryNotEqual   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SubQueryLess(Dos.ORM.FromSection)">
            <summary>
            SubQueryLess   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SubQueryLessOrEqual(Dos.ORM.FromSection)">
            <summary>
            SubQueryLessOrEqual   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SubQueryGreater(Dos.ORM.FromSection)">
            <summary>
            SubQueryGreater   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.SubQueryGreaterOrEqual(Dos.ORM.FromSection)">
            <summary>
            SubQueryGreaterOrEqual   子查询  
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.IsNull">
            <summary>
            字段 为null <example>field is null</example>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.IsNotNull">
            <summary>
            字段 为null <example>field is not null</example>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.Between(System.Object,System.Object)">
            <summary>
            Between操作
            </summary>
            <example>
            <![CDATA[ a>=value and a<=value ]]>
            </example>
            <param name="leftValue"></param>
            <param name="rightValue"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Equality(Dos.ORM.Field,Dos.ORM.Field)">
            <summary>
            
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Inequality(Dos.ORM.Field,Dos.ORM.Field)">
            <summary>
            
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_GreaterThan(Dos.ORM.Field,Dos.ORM.Field)">
            <summary>
            
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_GreaterThanOrEqual(Dos.ORM.Field,Dos.ORM.Field)">
            <summary>
            
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_LessThan(Dos.ORM.Field,Dos.ORM.Field)">
            <summary>
            
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_LessThanOrEqual(Dos.ORM.Field,Dos.ORM.Field)">
            <summary>
            
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Equality(Dos.ORM.Field,System.Object)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Equality(System.Object,Dos.ORM.Field)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Inequality(Dos.ORM.Field,System.Object)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Inequality(System.Object,Dos.ORM.Field)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_GreaterThan(Dos.ORM.Field,System.Object)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_GreaterThan(System.Object,Dos.ORM.Field)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_GreaterThanOrEqual(Dos.ORM.Field,System.Object)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_GreaterThanOrEqual(System.Object,Dos.ORM.Field)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_LessThan(Dos.ORM.Field,System.Object)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_LessThan(System.Object,Dos.ORM.Field)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_LessThanOrEqual(Dos.ORM.Field,System.Object)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_LessThanOrEqual(System.Object,Dos.ORM.Field)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Addition(Dos.ORM.Field,Dos.ORM.Field)">
            <summary>
            +
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Subtraction(Dos.ORM.Field,Dos.ORM.Field)">
            <summary>
            -
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Multiply(Dos.ORM.Field,Dos.ORM.Field)">
            <summary>
            *
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Division(Dos.ORM.Field,Dos.ORM.Field)">
            <summary>
            /
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Modulus(Dos.ORM.Field,Dos.ORM.Field)">
            <summary>
            %
            </summary>
            <param name="leftField"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Addition(Dos.ORM.Field,System.Object)">
            <summary>
            +
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Subtraction(Dos.ORM.Field,System.Object)">
            <summary>
            -
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Multiply(Dos.ORM.Field,System.Object)">
            <summary>
            *
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Division(Dos.ORM.Field,System.Object)">
            <summary>
            /
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Modulus(Dos.ORM.Field,System.Object)">
            <summary>
            %
            </summary>
            <param name="leftField"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Addition(System.Object,Dos.ORM.Field)">
            <summary>
            +
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Subtraction(System.Object,Dos.ORM.Field)">
            <summary>
            -
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Multiply(System.Object,Dos.ORM.Field)">
            <summary>
            *
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Division(System.Object,Dos.ORM.Field)">
            <summary>
            /
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Field.op_Modulus(System.Object,Dos.ORM.Field)">
            <summary>
            %
            </summary>
            <param name="value"></param>
            <param name="rightField"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.FieldAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Dos.ORM.FieldAttribute.Field">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="T:Dos.ORM.FieldExtend">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FieldExtend.Tips">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldExtend.Like(System.Object,System.Object)">
            <summary>
            like '%value%' 模糊查询，同Contains。
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldExtend.In``1(System.Object,``0[])">
            <summary>
            where field in (value,value,value)。传入Array或List&lt;T>。
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldExtend.In``1(System.Object,System.Collections.Generic.List{``0})">
            <summary>
            where field in (value,value,value)。传入Array或List&lt;T>。
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldExtend.NotIn``1(System.Object,``0[])">
            <summary>
            where field not in (value,value,value)。传入Array或List&lt;T>。
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldExtend.NotIn``1(System.Object,System.Collections.Generic.List{``0})">
            <summary>
            where field not in (value,value,value)。传入Array或List&lt;T>。
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldExtend.IsNull(System.Object)">
            <summary>
            IS NULL
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldExtend.IsNotNull(System.Object)">
            <summary>
            IS NOT NULL
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldExtend.As(System.Object,System.String)">
            <summary>
            As
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldExtend.Sum(System.Object)">
            <summary>
            Sum
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldExtend.Count(System.Object)">
            <summary>
            Count
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldExtend.Avg(System.Object)">
            <summary>
            Avg
            </summary>
        </member>
        <member name="M:Dos.ORM.FieldExtend.Len(System.Object)">
            <summary>
            Len
            </summary>
        </member>
        <member name="T:Dos.ORM.FromSection`1">
            <summary>
            查询
            </summary>
            <typeparam name="T"></typeparam>    
        </member>
        <member name="M:Dos.ORM.FromSection`1.#ctor(Dos.ORM.Database)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
        </member>
        <member name="M:Dos.ORM.FromSection`1.#ctor(Dos.ORM.Database,System.Data.Common.DbTransaction)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Dos.ORM.FromSection`1.#ctor(Dos.ORM.Database,System.Data.Common.DbTransaction,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="trans"></param>
            <param name="asName"></param>
        </member>
        <member name="M:Dos.ORM.FromSection`1.InnerJoin``1(Dos.ORM.WhereClip,System.String,System.String)">
            <summary>
            Inner Join。Lambda写法：.InnerJoin&lt;Model2>((a, b) => a.ID == b.ID)
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection`1.InnerJoin``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}},System.String)">
            <summary>
            Inner Join。Lambda写法：.InnerJoin&lt;Model2>((a, b) => a.ID == b.ID)
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection`1.CrossJoin``1(Dos.ORM.WhereClip)">
            <summary>
            Cross Join
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.RightJoin``1(Dos.ORM.WhereClip)">
            <summary>
            Right Join
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.LeftJoin``1(Dos.ORM.WhereClip)">
            <summary>
            Left Join。经典写法：Model1._.ID == Model2._.ID
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.LeftJoin``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            Left Join。Lambda写法：.LeftJoin&lt;Model2>((d1,d2) => d1.ID == d2.ID)
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.FullJoin``1(Dos.ORM.WhereClip)">
            <summary>
            Full Join
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Join(System.String,System.String,Dos.ORM.WhereClip,Dos.ORM.JoinType)">
            <summary>
            连接
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <param name="joinType"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.setPrimarykeyOrderby">
            <summary>
             设置默认主键排序 
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Having(Dos.ORM.WhereClip)">
            <summary>
            Having 
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Having(Dos.ORM.Where)">
            <summary>
            
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Where(Dos.ORM.WhereClip)">
            <summary>
            whereclip
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Where(Dos.ORM.Where{`0})">
            <summary>
            
            </summary>
            <param name="whereParam"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Where(Dos.ORM.Where)">
            <summary>
            
            </summary>
            <param name="whereParam"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Where``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Where``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Where``3(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Where``4(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,System.Boolean}})">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Where``5(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,``4,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <param name="lambdaWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="lambdaWhere"></param>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Select``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="lambdaWhere"></param>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Select``3(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="lambdaWhere"></param>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Select``5(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,``4,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="lambdaWhere"></param>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.GroupBy(Dos.ORM.GroupByClip)">
            <summary>
            groupby
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection`1.GroupBy(Dos.ORM.Field[])">
            <summary>
            groupby
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection`1.OrderBy(Dos.ORM.Field[])">
            <summary>
            
            </summary>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.OrderByDescending(Dos.ORM.Field[])">
            <summary>
            
            </summary>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.OrderBy(Dos.ORM.OrderByClip)">
            <summary>
            
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            orderby
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection`1.OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="lambdaOrderBy"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.OrderBy(Dos.ORM.OrderByClip[])">
            <summary>
            
            </summary>
            <param name="orderBys"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Select(Dos.ORM.Field[])">
            <summary>
            select field
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Select``2(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Select``3(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Select``4(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Select``5(System.Linq.Expressions.Expression{System.Func{`0,``0,``1,``2,``3,``4,System.Object}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Select(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            
            </summary>
            <param name="lambdaSelect"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Distinct">
            <summary>
            Distinct
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Top(System.Int32)">
            <summary>
            Top
            </summary>
            <param name="topCount"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Page(System.Int32,System.Int32)">
            <summary>
            Page
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.SetDefaultOrderby">
            <summary>
            设置默认排序
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection`1.From(System.Int32,System.Int32)">
            <summary>
            From  1-10
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.SetCacheTimeOut(System.Int32)">
            <summary>
            设置缓存有效期  单位：秒
            </summary>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.SetCacheDependency(System.Web.Caching.CacheDependency)">
            <summary>
            设置缓存依赖
            </summary>
            <param name="dep"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Refresh">
            <summary>
            重新加载
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.AddSelect(Dos.ORM.FromSection)">
            <summary>
            select sql
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.AddSelect(Dos.ORM.FromSection,System.String)">
            <summary>
            select sql
            </summary>
            <param name="fromSection"></param>
            <param name="aliasName">别名</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.ToList``1">
            <summary>
            
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.ToList">
            <summary>
            To List&lt;T>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.ToEnumerable">
            <summary>
            返回懒加载数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.ToFirstDefault">
            <summary>
            返回第一个实体  如果为null，则默认实例化一个
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.First">
            <summary>
            返回第一个实体，同ToFirst()。无数据返回Null。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.First``1">
            <summary>
            返回第一个实体，同ToFirst()。无数据返回Null。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.ToFirst``1">
            <summary>
            返回第一个实体 ，同First()。无数据返回Null。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.ToFirst">
            <summary>
            返回第一个实体 ，同First()。无数据返回Null。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.Union(Dos.ORM.FromSection)">
            <summary>
            Union
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection`1.UnionAll(Dos.ORM.FromSection)">
            <summary>
            Union All
            </summary>        
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.FromSection">
            <summary>
            查询
            </summary>    
        </member>
        <member name="F:Dos.ORM.FromSection.where">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.havingWhere">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.orderBy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.groupBy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.tableName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.parameters">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.fields">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.dbProvider">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.joins">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.database">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.distinctString">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.prefixString">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.startIndex">
            <summary>
            开始项
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.endIndex">
            <summary>
            结束项
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.timeout">
            <summary>
            缓存超时时间
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.cacheDep">
            <summary>
            缓存依赖
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.typeTableName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.isRefresh">
            <summary>
            是否重新加载
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.isPageFromSection">
            <summary>
            是否已经执行过分页
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection.trans">
            <summary>
            事务   -- 查询
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.Identity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.DbProvider">
            <summary>
            DbProvider。
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.Database">
            <summary>
            DbProvider。
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.DistinctString">
            <summary>
            设置 distinct
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.PrefixString">
            <summary>
            前置值如 Top N
            </summary>
        </member>
        <member name="F:Dos.ORM.FromSection._limitString">
            <summary>
            limit
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.LimitString">
            <summary>
            limit 
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.CountSqlString">
            <summary>
            记录数sql语句 count
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.SqlNoneOrderbyString">
            <summary>
            没有没有排序字段
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.FromString">
            <summary>
            
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.Joins">
            <summary>
            连接信息
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.SqlString">
            <summary>
            获取 sql语句
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.TableName">
            <summary>
            返回  表名
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.OrderByClip">
            <summary>
            返回  排序
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.OrderByString">
            <summary>
            返回排序字符串  例如：orderby id desc
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.GroupByClip">
            <summary>
            返回 分组
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.GroupByString">
            <summary>
            返回排序字符串 例如：group by id
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection.GetWhereClip">
            <summary>
            返回 条件
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.Parameters">
            <summary>
            返回 参数  (包含where 和 from)
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.ColumnsString">
            <summary>
            返回  选择列
            </summary>
        </member>
        <member name="P:Dos.ORM.FromSection.Fields">
            <summary>
            查询的字段
            </summary>
        </member>
        <member name="M:Dos.ORM.FromSection.#ctor(Dos.ORM.Database,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:Dos.ORM.FromSection.#ctor(Dos.ORM.Database,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="tableName"></param>
            <param name="asName"></param>
        </member>
        <member name="M:Dos.ORM.FromSection.#ctor(Dos.ORM.Database,System.String,System.String,System.Data.Common.DbTransaction)">
            <summary>
            构造函数
            </summary>
            <param name="database"></param>
            <param name="tableName"></param>
            <param name="asName"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Dos.ORM.FromSection.isTurnonCache">
            <summary>
            是否开启缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.isCustomerCache">
            <summary>
            判断是否用户自定义缓存策略
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.SetCacheTimeOut(System.Int32)">
            <summary>
            设置缓存有效期  单位：秒
            </summary>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.SetCacheDependency(System.Web.Caching.CacheDependency)">
            <summary>
            设置缓存依赖
            </summary>
            <param name="dep"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.Refresh">
            <summary>
            重新加载
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.Where(Dos.ORM.WhereClip)">
            <summary>
            whereclip
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.GroupBy(Dos.ORM.GroupByClip)">
            <summary>
            groupby
            </summary>
            <param name="groupBy"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.Having(Dos.ORM.WhereClip)">
            <summary>
            having条件
            </summary>
            <param name="havingWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.GroupBy(Dos.ORM.Field[])">
            <summary>
            groupby
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.OrderBy(Dos.ORM.OrderByClip)">
            <summary>
            orderby
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.OrderBy(Dos.ORM.OrderByClip[])">
            <summary>
            orderby
            </summary>
            <param name="orderBys"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.Select(Dos.ORM.Field[])">
            <summary>
            select field
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.AddSelect(Dos.ORM.FromSection)">
            <summary>
            select sql
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.AddSelect(Dos.ORM.FromSection,System.String)">
            <summary>
            select sql
            </summary>
            <param name="fromSection"></param>
            <param name="aliasName">别名</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.AddSelect(Dos.ORM.Field[])">
            <summary>
            add select field
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.Distinct">
            <summary>
            Distinct
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.Top(System.Int32)">
            <summary>
            Top
            </summary>
            <param name="topCount"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.Page(System.Int32,System.Int32)">
            <summary>
            Page
            </summary>
            <param name="pageSize">每页数</param>
            <param name="pageIndex">第几页</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.From(System.Int32,System.Int32)">
            <summary>
            From startIndex to endIndex
            </summary>
            <param name="startIndex">开始记录数</param>
            <param name="endIndex">结束记录数</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.formatSql(System.String,Dos.ORM.FromSection)">
            <summary>
            格式化sql语句
            </summary>
            <param name="sql"></param>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.Count">
            <summary>
            获取记录数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.Count(Dos.ORM.FromSection)">
            <summary>
            获取记录数(内部使用)
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.getCache(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.setCache``1(``0,System.String)">
            <summary>
            保存信息
            </summary>
            <param name="value"></param>
            <param name="cacheKey"></param>
        </member>
        <member name="M:Dos.ORM.FromSection.ToDataSet">
            <summary>
            To DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.GetPagedFromSection">
            <summary>
            获取分页过的FromSection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.CreateDbCommand(Dos.ORM.FromSection)">
            <summary>
            创建  查询的DbCommand
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.ToDataReader">
            <summary>
            To DataReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.ToDataReader(Dos.ORM.FromSection)">
            <summary>
             To DataReader
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.ToDataTable">
            <summary>
            To DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.ToScalar">
            <summary>
            To Scalar
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.ToScalar``1">
            <summary>
            To Scalar
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.join(System.String,System.String,Dos.ORM.WhereClip,Dos.ORM.JoinType)">
            <summary>
            连接
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <param name="joinType"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.InnerJoin(System.String,Dos.ORM.WhereClip,System.String)">
            <summary>
            Inner Join
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.LeftJoin(System.String,Dos.ORM.WhereClip,System.String)">
            <summary>
            Left Join
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.RightJoin(System.String,Dos.ORM.WhereClip,System.String)">
            <summary>
            Right Join
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.CrossJoin(System.String,Dos.ORM.WhereClip,System.String)">
            <summary>
            Cross Join
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.FullJoin(System.String,Dos.ORM.WhereClip,System.String)">
            <summary>
            Full Join
            </summary>
            <param name="tableName"></param>
            <param name="userName"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.Union(Dos.ORM.FromSection)">
            <summary>
            Union
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.FromSection.UnionAll(Dos.ORM.FromSection)">
            <summary>
            Union All
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.GroupByClip">
            <summary>
            分组
            </summary>
        </member>
        <member name="M:Dos.ORM.GroupByClip.IsNullOrEmpty(Dos.ORM.GroupByClip)">
            <summary>
            判断 GroupByClip  是否为null
            </summary>
            <param name="groupByClip"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.GroupByClip.op_BitwiseAnd(Dos.ORM.GroupByClip,Dos.ORM.GroupByClip)">
            <summary>
            两个GroupByClip相加
            </summary>
            <param name="leftGroupByClip"></param>
            <param name="rightGroupByClip"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.GroupByClip.RemovePrefixTableName">
            <summary>
            去掉的表前缀
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dos.ORM.GroupByClip.GroupByString">
            <summary>
            GroupByString
            <example>
            group by id
            </example>
            </summary>
        </member>
        <member name="M:Dos.ORM.GroupByClip.op_True(Dos.ORM.GroupByClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.GroupByClip.op_False(Dos.ORM.GroupByClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.GroupByClip.Equals(Dos.ORM.GroupByClip)">
            <summary>
            比较
            </summary>
            <param name="groupByClip"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.DbProvider">
            <summary>
            DbProvider
            </summary>
        </member>
        <member name="F:Dos.ORM.DbProvider.likeToken">
            <summary>
            like符号。 --- 2015-09-07
            </summary>
        </member>
        <member name="F:Dos.ORM.DbProvider.leftToken">
            <summary>
            【
            </summary>
        </member>
        <member name="F:Dos.ORM.DbProvider.paramPrefixToken">
            <summary>
            参数前缀
            </summary>
        </member>
        <member name="F:Dos.ORM.DbProvider.rightToken">
            <summary>
            】
            </summary>
        </member>
        <member name="F:Dos.ORM.DbProvider.dbProviderFactory">
            <summary>
            The db provider factory.
            </summary>
        </member>
        <member name="F:Dos.ORM.DbProvider.dbConnStrBuilder">
            <summary>
            The db connection string builder
            </summary>
        </member>
        <member name="M:Dos.ORM.DbProvider.#ctor(System.String,System.Data.Common.DbProviderFactory,System.Char,System.Char,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:DbProvider"/> class.
            </summary>
            <param name="connectionString">The conn STR.</param>
            <param name="dbProviderFactory">The db provider factory.</param>
            <param name="leftToken">leftToken</param>
            <param name="paramPrefixToken">paramPrefixToken</param>
            <param name="rightToken">rightToken</param>
        </member>
        <member name="M:Dos.ORM.DbProvider.#ctor(System.String,System.Data.Common.DbProviderFactory,System.Char,System.Char,System.Char,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:DbProvider"/> class.
            </summary>
            <param name="connectionString">The conn STR.</param>
            <param name="dbProviderFactory">The db provider factory.</param>
            <param name="leftToken">leftToken</param>
            <param name="paramPrefixToken">paramPrefixToken</param>
            <param name="rightToken">rightToken</param>
            <param name="likeToken">likeToken</param>
        </member>
        <member name="F:Dos.ORM.DbProvider.databaseType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Dos.ORM.DbProvider.DatabaseType">
            <summary>
            ConnectionStrings 节点名称
            </summary>
        </member>
        <member name="P:Dos.ORM.DbProvider.ConnectionStringsName">
            <summary>
            ConnectionStrings 节点名称
            </summary>
        </member>
        <member name="P:Dos.ORM.DbProvider.ConnectionString">
            <summary>
            Gets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Dos.ORM.DbProvider.DbProviderFactory">
            <summary>
            Gets the db provider factory.
            </summary>
            <value>The db provider factory.</value>
        </member>
        <member name="P:Dos.ORM.DbProvider.ParamPrefix">
            <summary>
            Gets the param prefix.
            </summary>
            <value>The param prefix.</value>
        </member>
        <member name="P:Dos.ORM.DbProvider.LeftToken">
            <summary>
            Gets the left token of table name or column name.
            </summary>
            <value>The left token.</value>
        </member>
        <member name="P:Dos.ORM.DbProvider.RightToken">
            <summary>
            Gets the right token of table name or column name.
            </summary>
            <value>The right token.</value>
        </member>
        <member name="F:Dos.ORM.DbProvider.cacheConfig">
            <summary>
            缓存
            </summary>
        </member>
        <member name="P:Dos.ORM.DbProvider.CacheConfig">
            <summary>
            缓存配置
            </summary>
        </member>
        <member name="F:Dos.ORM.DbProvider.entitiesCache">
            <summary>
            实体缓存
            </summary>
        </member>
        <member name="P:Dos.ORM.DbProvider.EntitiesCache">
            <summary>
            实体缓存
            </summary>
        </member>
        <member name="P:Dos.ORM.DbProvider.RowAutoID">
            <summary>
            自增长字段查询语句
            </summary>
        </member>
        <member name="P:Dos.ORM.DbProvider.SupportBatch">
            <summary>
            是否支持批量sql提交
            </summary>
        </member>
        <member name="M:Dos.ORM.DbProvider.BuildParameterName(System.String)">
            <summary>
            Builds the name of the parameter.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbProvider.BuildTableName(System.String,System.String)">
            <summary>
            Builds the name of the table.
            </summary>
            <param name="name">The name.</param>
            <param name="userName">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbProvider.CreatePageFromSection(Dos.ORM.FromSection,System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="fromSection"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.DbProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            调整DbCommand命令
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.OrderByOperater">
            <summary>
            排序类型
            </summary>
        </member>
        <member name="T:Dos.ORM.OrderByClip">
            <summary>
            排序
            </summary>
        </member>
        <member name="F:Dos.ORM.OrderByClip.None">
            <summary>
            null
            </summary>
        </member>
        <member name="M:Dos.ORM.OrderByClip.IsNullOrEmpty(Dos.ORM.OrderByClip)">
            <summary>
            判断 OrderByClip  是否为null
            </summary>
            <param name="orderByClip"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.OrderByClip.op_BitwiseAnd(Dos.ORM.OrderByClip,Dos.ORM.OrderByClip)">
            <summary>
            两个OrderByClip相加
            </summary>
            <param name="leftOrderByClip"></param>
            <param name="rightOrderByClip"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.OrderByClip.RemovePrefixTableName">
            <summary>
            去掉的表前缀
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.OrderByClip.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dos.ORM.OrderByClip.ReverseOrderByClip">
            <summary>
            倒叙
            </summary>
        </member>
        <member name="M:Dos.ORM.OrderByClip.Equals(Dos.ORM.OrderByClip)">
            <summary>
            比较
            </summary>
            <param name="orderByClip"></param>
            <returns></returns>
        </member>
        <member name="P:Dos.ORM.OrderByClip.OrderByString">
            <summary>
            OrderByString
            <example>
            order by id desc
            </example>
            </summary>
        </member>
        <member name="T:Dos.ORM.ProviderFactory">
            <summary>
            The db provider factory.
            </summary>
        </member>
        <member name="M:Dos.ORM.ProviderFactory.CreateDbProvider(System.String,System.String,System.String,System.Nullable{Dos.ORM.DatabaseType})">
            <summary>
            创建数据库事件提供程序
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="className">Name of the class.</param>
            <param name="connectionString">The conn STR.</param>
            <param name="databaseType">The DatabaseType.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="P:Dos.ORM.ProviderFactory.Default">
            <summary>
            Gets the default db provider.
            </summary>
            <value>The default.</value>
        </member>
        <member name="M:Dos.ORM.ProviderFactory.CreateDbProvider(System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="connStrName">Name of the conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="T:Dos.ORM.Oracle.OracleProvider">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="M:Dos.ORM.Oracle.OracleProvider.CreatePageFromSection(Dos.ORM.FromSection,System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="fromSection"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Oracle.OracleProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="T:Dos.ORM.SqlServer9.SqlServer9Provider">
            <summary>
            Sql Server 2005
            </summary>
        </member>
        <member name="M:Dos.ORM.SqlServer9.SqlServer9Provider.CreatePageFromSection(Dos.ORM.FromSection,System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="fromSection"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.SqlServer.SqlServerProvider">
            <summary>
            SqlServer 
            </summary>
        </member>
        <member name="M:Dos.ORM.SqlServer.SqlServerProvider.BuildParameterName(System.String)">
            <summary>
            Builds the name of the parameter.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.SerializationManager">
            <summary>
            The serialization manager.
            </summary>
        </member>
        <member name="T:Dos.ORM.SerializationManager.TypeSerializeHandler">
            <summary>
            The serialize delegate.
            </summary>
            <param name="obj">obj to be serialized.</param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.SerializationManager.TypeDeserializeHandler">
            <summary>
            The deserialize delegate.
            </summary>
            <param name="data">the data to be deserialied.</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.SerializationManager.Serialize(System.Object)">
            <summary>
            Serializes the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.SerializationManager.Deserialize(System.Type,System.String)">
            <summary>
            Deserializes the specified return type.
            </summary>
            <param name="returnType">Type of the return.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.SerializationManager.RegisterSerializeHandler(System.Type,Dos.ORM.SerializationManager.TypeSerializeHandler,Dos.ORM.SerializationManager.TypeDeserializeHandler)">
            <summary>
            Registers the serialize handler.
            </summary>
            <param name="type">The type.</param>
            <param name="serializeHandler">The serialize handler.</param>
            <param name="deserializeHandler">The deserialize handler.</param>
        </member>
        <member name="M:Dos.ORM.SerializationManager.UnregisterSerializeHandler(System.Type)">
            <summary>
            Unregisters the serialize handler.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="T:Dos.ORM.WhereClip">
            <summary>
            条件
            </summary>
        </member>
        <member name="F:Dos.ORM.WhereClip.All">
            <summary>
            All
            </summary>
        </member>
        <member name="M:Dos.ORM.WhereClip.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dos.ORM.WhereClip.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:Dos.ORM.WhereClip.#ctor(System.String,Dos.ORM.Parameter[])">
            <summary>
            
            </summary>
            <param name="customWhereString"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Dos.ORM.WhereClip.#ctor(Dos.ORM.Field,System.Object,Dos.ORM.QueryOperator)">
            <summary>
            
            </summary>
            <param name="field"></param>
            <param name="value"></param>
            <param name="oper"></param>
        </member>
        <member name="P:Dos.ORM.WhereClip.Where">
            <summary>
            返回  where
            </summary>
        </member>
        <member name="P:Dos.ORM.WhereClip.WhereString">
            <summary>
            WhereString    
            <example>
            where 1=1
            </example>
            </summary>
        </member>
        <member name="M:Dos.ORM.WhereClip.op_Implicit(System.String)~Dos.ORM.WhereClip">
            <summary>
            隐式转换
            </summary>
            <param name="whereString"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.WhereClip.Equals(Dos.ORM.WhereClip,Dos.ORM.WhereClip)">
            <summary>
            判断条件是否一样
            </summary>
            <param name="leftWhere"></param>
            <param name="rightWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.WhereClip.IsNullOrEmpty(Dos.ORM.WhereClip)">
            <summary>
            判断 WhereClip  是否为null
            </summary>
            <param name="whereClip"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.WhereClip.And(Dos.ORM.WhereClip)">
            <summary>
            And
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.WhereClip.Or(Dos.ORM.WhereClip)">
            <summary>
            Or
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.WhereClip.op_True(Dos.ORM.WhereClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.WhereClip.op_False(Dos.ORM.WhereClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.WhereClip.op_BitwiseAnd(Dos.ORM.WhereClip,Dos.ORM.WhereClip)">
            <summary>
            And
            </summary>
            <param name="leftWhere"></param>
            <param name="rightWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.WhereClip.op_BitwiseOr(Dos.ORM.WhereClip,Dos.ORM.WhereClip)">
            <summary>
            Or
            </summary>
            <param name="leftWhere"></param>
            <param name="rightWhere"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.WhereClip.op_LogicalNot(Dos.ORM.WhereClip)">
            <summary>
            not
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.WhereClip.Exists(Dos.ORM.FromSection)">
            <summary>
            EXISTS
            </summary>
            <param name="fromSection"></param>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.ProcSection">
            <summary>
            执行存储过程
            </summary>
        </member>
        <member name="M:Dos.ORM.ProcSection.#ctor(Dos.ORM.DbSession,System.String)">
            <summary>
            
            </summary>
            <param name="dbSession"></param>
            <param name="procName"></param>
        </member>
        <member name="F:Dos.ORM.ProcSection.outParameters">
            <summary>
            返回的参数
            </summary>
        </member>
        <member name="M:Dos.ORM.ProcSection.SetDbTransaction(System.Data.Common.DbTransaction)">
            <summary>
            设置事务
            </summary>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <member name="P:Dos.ORM.ProcSection.isParameterSpecial">
            <summary>
            存储过程参数不要加前缀
            </summary>
        </member>
        <member name="M:Dos.ORM.ProcSection.getParameterName(System.String)">
            <summary>
            获取参数名字
            </summary>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.GetReturnValues">
            <summary>
            返回存储过程返回值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.AddParameter(System.Data.Common.DbParameter[])">
            <summary>
            添加参数
            </summary>
        </member>
        <member name="M:Dos.ORM.ProcSection.AddInParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            添加参数
            </summary>
            <param name="parameterName"></param>
            <param name="value"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.AddInParameter(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            添加输入参数
            </summary>
            <param name="parameterName"></param>
            <param name="value"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.AddOutParameter(System.String,System.Data.DbType)">
            <summary>
            添加输出参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.AddOutParameter(System.String,System.Data.DbType,System.Int32)">
            <summary>
            添加输出参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.AddInputOutputParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            添加输入输出参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.AddInputOutputParameter(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            添加输入输出参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.AddReturnValueParameter(System.String,System.Data.DbType)">
            <summary>
            添加返回参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.AddReturnValueParameter(System.String,System.Data.DbType,System.Int32)">
            <summary>
            添加返回参数
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.executeBefore">
            <summary>
            操作参数名称
            </summary>
        </member>
        <member name="M:Dos.ORM.ProcSection.ToScalar">
            <summary>
            返回单个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.ToDataReader">
            <summary>
            返回DataReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.ToDataSet">
            <summary>
            返回DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.ProcSection.ExecuteNonQuery">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.Section">
            <summary>
            Section
            </summary>
        </member>
        <member name="M:Dos.ORM.Section.ToScalar">
            <summary>
            返回单个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Section.ToScalar``1">
            <summary>
            返回单个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Section.First``1">
            <summary>
            返回第一个实体，同ToFirst()。无数据返回Null。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Section.ToFirst``1">
            <summary>
            返回单个实体
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Section.ToFirstDefault``1">
            <summary>
            返回单个实体
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Section.ToList``1">
            <summary>
            返回实体列表
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Section.ToEnumerable``1">
            <summary>
            返回懒加载数据
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Section.ToDataReader">
            <summary>
            返回DataReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Section.ToDataSet">
            <summary>
            返回DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Section.ToDataTable">
            <summary>
            返回DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dos.ORM.Section.ExecuteNonQuery">
            <summary>
            执行ExecuteNonQuery
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dos.ORM.SqlSection">
            <summary>
            执行sql语句
            </summary>
        </member>
        <member name="M:Dos.ORM.SqlSection.#ctor(Dos.ORM.DbSession,System.String)">
            <summary>
            
            </summary>
            <param name="dbSession"></param>
            <param name="sql"></param>
        </member>
        <member name="M:Dos.ORM.SqlSection.SetDbTransaction(System.Data.Common.DbTransaction)">
            <summary>
            设置事务
            </summary>
            <param name="tran"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dos.ORM.SqlSection.AddParameter(System.Data.Common.DbParameter[])" -->
        <member name="M:Dos.ORM.SqlSection.AddInParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            添加参数
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dos.ORM.SqlSection.AddInParameter(System.String,System.Data.DbType,System.Int32,System.Object)" -->
    </members>
</doc>
